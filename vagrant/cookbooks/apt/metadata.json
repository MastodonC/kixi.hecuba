{"name":"apt","description":"Configures apt and apt services and LWRPs for managing apt repositories and preferences","long_description":"Description\n===========\n\nThis cookbook includes recipes to execute apt-get update to ensure the\nlocal APT package cache is up to date. There are recipes for managing\nthe apt-cacher-ng caching proxy and proxy clients. It also includes a\nLWRP for managing APT repositories in /etc/apt/sources.list.d as well as\nan LWRP for pinning packages via /etc/apt/preferences.d.\n\nRequirements\n============\n\nVersion 2.0.0+ of this cookbook requires **Chef 11.0.0** or later.\n\nIf your Chef version is earlier than 11.0.0, use version 1.10.0 of\nthis cookbook.\n\nSee [COOK-2258](http://tickets.opscode.com/browse/COOK-2258) for more\ninformation on this requirement.\n\nVersion 1.8.2 to 1.10.0 of this cookbook requires **Chef 10.16.4** or\nlater.\n\nIf your Chef version is earlier than 10.16.4, use version 1.7.0 of\nthis cookbook.\n\nSee [CHEF-3493](http://tickets.opscode.com/browse/CHEF-3493) and\n[this code comment](http://bit.ly/VgvCgf) for more information on this\nrequirement.\n\n## Platform\n\nPlease refer to the [TESTING file](TESTING.md) to see the currently (and passing) tested platforms. The release was tested on:\n* Ubuntu 10.04\n* Ubuntu 12.04\n* Ubuntu 13.04\n* Debian 7.1\n* Debian 6.0 (have with manual testing)\n\nMay work with or without modification on other Debian derivatives.\n\nRecipes\n=======\n\n## default\n\nThis recipe installs the `update-notifier-common` package to provide\nthe timestamp file used to only run `apt-get update` if the cache is\nmore than one day old.\n\nThis recipe should appear first in the run list of Debian or Ubuntu\nnodes to ensure that the package cache is up to date before managing\nany `package` resources with Chef.\n\nThis recipe also sets up a local cache directory for preseeding packages.\n\n## cacher-client\n\nConfigures the node to use the `apt-cacher-ng` server as a client.\n\n## cacher-ng\n\nInstalls the `apt-cacher-ng` package and service so the system can\nprovide APT caching. You can check the usage report at\nhttp://{hostname}:3142/acng-report.html.\n\nIf you wish to help the `cacher-ng` recipe seed itself, you must now explicitly\ninclude the `cacher-client` recipe in your run list **after** `cacher-ng` or you\nwill block your ability to install any packages (ie. `apt-cacher-ng`).\n\nAttributes\n==========\n\n* `['apt']['cacher_ipaddress']` - use a cacher server (or standard proxy server) not available via search\n* `['apt']['cacher_port']` - port for the cacher-ng service (either client or server), default is '3142'\n* `['apt']['cacher_dir']` - directory used by cacher-ng service, default is '/var/cache/apt-cacher-ng'\n* `['apt']['cacher-client']['restrict_environment']` - restrict your node to using the `apt-cacher-ng` server in your Environment, default is 'false'\n* `['apt']['compiletime']` - force the `cacher-client` recipe to run before other recipes. It forces apt to use the proxy before other recipes run. Useful if your nodes have limited access to public apt repositories. This is overridden if the `cacher-ng` recipe is in your run list. Default is 'false'\n\nResources/Providers\n===================\n\n## Managing repositories\n\nThis LWRP provides an easy way to manage additional APT repositories.\nAdding a new repository will notify running the `execute[apt-get-update]`\nresource immediately.\n\n### Actions\n\n- :add: creates a repository file and builds the repository listing\n- :remove: removes the repository file\n\n### Attribute Parameters\n\n- repo_name: name attribute. The name of the channel to discover\n- uri: the base of the Debian distribution\n- distribution: this is usually your release's codename...ie something\n  like `karmic`, `lucid` or `maverick`\n- components: package groupings..when it doubt use `main`\n- arch: constrain package to a particular arch like `i386`, `amd64` or\n  even `armhf` or `powerpc`. Defaults to nil.\n- deb_src: whether or not to add the repository as a source repo as\n  well - value can be `true` or `false`, default `false`.\n- keyserver: the GPG keyserver where the key for the repo should be retrieved\n- key: if a `keyserver` is provided, this is assumed to be the\n  fingerprint, otherwise it can be either the URI to the GPG key for\n  the repo, or a cookbook_file.\n- key_proxy: if set, pass the specified proxy via `http-proxy=` to GPG.\n- cookbook: if key should be a cookbook_file, specify a cookbook where\n  the key is located for files/default. Defaults to nil, so it will\n  use the cookbook where the resource is used.\n\n### Examples\n\n    # add the Zenoss repo\n    apt_repository \"zenoss\" do\n      uri \"http://dev.zenoss.org/deb\"\n      components [\"main\",\"stable\"]\n    end\n\n    # add the Nginx PPA; grab key from keyserver\n    apt_repository \"nginx-php\" do\n      uri \"http://ppa.launchpad.net/nginx/php5/ubuntu\"\n      distribution node['lsb']['codename']\n      components [\"main\"]\n      keyserver \"keyserver.ubuntu.com\"\n      key \"C300EE8C\"\n    end\n\n    # add the Nginx PPA; grab key from keyserver, also add source repo\n    apt_repository \"nginx-php\" do\n      uri \"http://ppa.launchpad.net/nginx/php5/ubuntu\"\n      distribution node['lsb']['codename']\n      components [\"main\"]\n      keyserver \"keyserver.ubuntu.com\"\n      key \"C300EE8C\"\n      deb_src true\n    end\n\n    # add the Cloudera Repo of CDH4 packages for Ubuntu 12.04 on AMD64\n    apt_repository \"cloudera\" do\n      uri \"http://archive.cloudera.com/cdh4/ubuntu/precise/amd64/cdh\"\n      arch \"amd64\"\n      distribution \"precise-cdh4\"\n      components [\"contrib\"]\n      key \"http://archive.cloudera.com/debian/archive.key\"\n    end\n\n    # remove Zenoss repo\n    apt_repository \"zenoss\" do\n      action :remove\n    end\n\n## Pinning packages\n\nThis LWRP provides an easy way to pin packages in /etc/apt/preferences.d.\nAlthough apt-pinning is quite helpful from time to time please note that Debian\ndoes not encourage its use without thorough consideration.\n\nFurther information regarding apt-pinning is available via\nhttp://wiki.debian.org/AptPreferences.\n\n### Actions\n\n- :add: creates a preferences file under /etc/apt/preferences.d\n- :remove: Removes the file, therefore unpin the package\n\n### Attribute Parameters\n\n- package_name: name attribute. The name of the package\n- glob: Pin by glob() expression or regexp surrounded by /.\n- pin: The package version/repository to pin\n- pin_priority: The pinning priority aka \"the highest package version wins\"\n\n### Examples\n\n    # Pin libmysqlclient16 to version 5.1.49-3\n    apt_preference \"libmysqlclient16\" do\n      pin \"version 5.1.49-3\"\n      pin_priority \"700\"\n    end\n\n    # Unpin libmysqlclient16\n    apt_preference \"libmysqlclient16\" do\n      action :remove\n    end\n\n    # Pin all packages from dotdeb.org\n    apt_preference \"dotdeb\" do\n      glob \"*\"\n      pin \"origin packages.dotdeb.org \"\n      pin_priority \"700\"\n    end\n\nUsage\n=====\n\nPut `recipe[apt]` first in the run list. If you have other recipes\nthat you want to use to configure how apt behaves, like new sources,\nnotify the execute resource to run, e.g.:\n\n    template \"/etc/apt/sources.list.d/my_apt_sources.list\" do\n      notifies :run, resources(:execute => \"apt-get update\"), :immediately\n    end\n\nThe above will run during execution phase since it is a normal\ntemplate resource, and should appear before other package resources\nthat need the sources in the template.\n\nPut `recipe[apt::cacher-ng]` in the run_list for a server to provide\nAPT caching and add `recipe[apt::cacher-client]` on the rest of the\nDebian-based nodes to take advantage of the caching server.\n\nIf you want to cleanup unused packages, there is also the `apt-get autoclean`\nand `apt-get autoremove` resources provided for automated cleanup.\n\nLicense and Author\n==================\n\n|                      |                                         |\n|:---------------------|:----------------------------------------|\n| **Author**           | Joshua Timberman <joshua@opscode.com>   |\n| **Author**           | Matt Ray (<matt@opscode.com>)           |\n| **Author**           | Seth Chisamore (<schisamo@opscode.com>) |\n|                      |                                         |\n| **Copyright**        | Copyright (c) 2009-2013, Opscode, Inc.  |\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n","maintainer":"Opscode, Inc.","maintainer_email":"cookbooks@opscode.com","license":"Apache 2.0","platforms":{"ubuntu":">= 0.0.0","debian":">= 0.0.0"},"dependencies":{},"recommendations":{},"suggestions":{},"conflicting":{},"providing":{},"replacing":{},"attributes":{"apt/cacher-client/restrict_environment":{"description":"Whether to restrict the search for the caching server to the same environment as this node","default":"false","choice":[],"calculated":false,"type":"string","required":"optional","recipes":[]},"apt/cacher_port":{"description":"Default listen port for the caching server","default":"3142","choice":[],"calculated":false,"type":"string","required":"optional","recipes":[]},"apt/key_proxy":{"description":"Passed as the proxy passed to GPG for the apt_repository resource","default":"","choice":[],"calculated":false,"type":"string","required":"optional","recipes":[]},"apt/caching_server":{"description":"Set this to true if the node is a caching server","default":"false","choice":[],"calculated":false,"type":"string","required":"optional","recipes":[]}},"groupings":{},"recipes":{"apt":"Runs apt-get update during compile phase and sets up preseed directories","apt::cacher-ng":"Set up an apt-cacher-ng caching proxy","apt::cacher-client":"Client for the apt::cacher-ng caching proxy"},"version":"2.1.1"}