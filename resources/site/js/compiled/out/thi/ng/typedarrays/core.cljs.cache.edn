;; Analyzed by ClojureScript 0.0-3297
{:use-macros nil, :excludes #{}, :name thi.ng.typedarrays.core, :imports nil, :requires nil, :uses nil, :defs {uint8 {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/typedarrays/core.cljs", :line 16, :column 7, :end-line 16, :end-column 12, :arglists (quote ([size-or-coll])), :doc "Creates a native Uint8Array of the given size or from `coll`."}, :name thi.ng.typedarrays.core/uint8, :variadic false, :file "resources/public/js/compiled/out/thi/ng/typedarrays/core.cljs", :end-column 12, :method-params ([size-or-coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([size-or-coll])), :doc "Creates a native Uint8Array of the given size or from `coll`."}, typed-arrays-supported? {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/typedarrays/core.cljs", :line 120, :column 7, :end-line 120, :end-column 30, :arglists (quote ([])), :doc "Returns true if JS runtime supports typed arrays"}, :name thi.ng.typedarrays.core/typed-arrays-supported?, :variadic false, :file "resources/public/js/compiled/out/thi/ng/typedarrays/core.cljs", :end-column 30, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 120, :end-line 120, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Returns true if JS runtime supports typed arrays"}, uint8-clamped {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/typedarrays/core.cljs", :line 29, :column 7, :end-line 29, :end-column 20, :arglists (quote ([size-or-coll])), :doc "Creates a native Uint8ClampedArray of the given size or from `coll`."}, :name thi.ng.typedarrays.core/uint8-clamped, :variadic false, :file "resources/public/js/compiled/out/thi/ng/typedarrays/core.cljs", :end-column 20, :method-params ([size-or-coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([size-or-coll])), :doc "Creates a native Uint8ClampedArray of the given size or from `coll`."}, int32 {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/typedarrays/core.cljs", :line 68, :column 7, :end-line 68, :end-column 12, :arglists (quote ([size-or-coll])), :doc "Creates a native Int32Array of the given size or from `coll`."}, :name thi.ng.typedarrays.core/int32, :variadic false, :file "resources/public/js/compiled/out/thi/ng/typedarrays/core.cljs", :end-column 12, :method-params ([size-or-coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 1, :fn-var true, :arglists (quote ([size-or-coll])), :doc "Creates a native Int32Array of the given size or from `coll`."}, int16 {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/typedarrays/core.cljs", :line 42, :column 7, :end-line 42, :end-column 12, :arglists (quote ([size-or-coll])), :doc "Creates a native Int16Array of the given size or from `coll`."}, :name thi.ng.typedarrays.core/int16, :variadic false, :file "resources/public/js/compiled/out/thi/ng/typedarrays/core.cljs", :end-column 12, :method-params ([size-or-coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 1, :fn-var true, :arglists (quote ([size-or-coll])), :doc "Creates a native Int16Array of the given size or from `coll`."}, float32 {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/typedarrays/core.cljs", :line 94, :column 7, :end-line 94, :end-column 14, :arglists (quote ([size-or-coll])), :doc "Creates a native Float32Array of the given size or from `coll`."}, :name thi.ng.typedarrays.core/float32, :variadic false, :file "resources/public/js/compiled/out/thi/ng/typedarrays/core.cljs", :end-column 14, :method-params ([size-or-coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 94, :end-line 94, :max-fixed-arity 1, :fn-var true, :arglists (quote ([size-or-coll])), :doc "Creates a native Float32Array of the given size or from `coll`."}, array-types {:name thi.ng.typedarrays.core/array-types, :file "resources/public/js/compiled/out/thi/ng/typedarrays/core.cljs", :line 124, :column 1, :end-line 124, :end-column 27, :private true, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/typedarrays/core.cljs", :line 124, :column 16, :end-line 124, :end-column 27, :private true}}, float64 {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/typedarrays/core.cljs", :line 107, :column 7, :end-line 107, :end-column 14, :arglists (quote ([size-or-coll])), :doc "Creates a native Float64Array of the given size or from `coll`."}, :name thi.ng.typedarrays.core/float64, :variadic false, :file "resources/public/js/compiled/out/thi/ng/typedarrays/core.cljs", :end-column 14, :method-params ([size-or-coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 107, :end-line 107, :max-fixed-arity 1, :fn-var true, :arglists (quote ([size-or-coll])), :doc "Creates a native Float64Array of the given size or from `coll`."}, array-type {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/typedarrays/core.cljs", :line 135, :column 7, :end-line 135, :end-column 17, :arglists (quote ([x]))}, :name thi.ng.typedarrays.core/array-type, :variadic false, :file "resources/public/js/compiled/out/thi/ng/typedarrays/core.cljs", :end-column 17, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 135, :end-line 135, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, uint16 {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/typedarrays/core.cljs", :line 55, :column 7, :end-line 55, :end-column 13, :arglists (quote ([size-or-coll])), :doc "Creates a native Uint16Array of the given size or from `coll`."}, :name thi.ng.typedarrays.core/uint16, :variadic false, :file "resources/public/js/compiled/out/thi/ng/typedarrays/core.cljs", :end-column 13, :method-params ([size-or-coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([size-or-coll])), :doc "Creates a native Uint16Array of the given size or from `coll`."}, int8 {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/typedarrays/core.cljs", :line 3, :column 7, :end-line 3, :end-column 11, :arglists (quote ([size-or-coll])), :doc "Creates a native Int8Array of the given size or from `coll`."}, :name thi.ng.typedarrays.core/int8, :variadic false, :file "resources/public/js/compiled/out/thi/ng/typedarrays/core.cljs", :end-column 11, :method-params ([size-or-coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 3, :end-line 3, :max-fixed-arity 1, :fn-var true, :arglists (quote ([size-or-coll])), :doc "Creates a native Int8Array of the given size or from `coll`."}, uint32 {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/typedarrays/core.cljs", :line 81, :column 7, :end-line 81, :end-column 13, :arglists (quote ([size-or-coll])), :doc "Creates a native Uint32Array of the given size or from `coll`."}, :name thi.ng.typedarrays.core/uint32, :variadic false, :file "resources/public/js/compiled/out/thi/ng/typedarrays/core.cljs", :end-column 13, :method-params ([size-or-coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 1, :fn-var true, :arglists (quote ([size-or-coll])), :doc "Creates a native Uint32Array of the given size or from `coll`."}, typed-array? {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/typedarrays/core.cljs", :line 138, :column 7, :end-line 138, :end-column 19, :arglists (quote ([x])), :doc "Returns truthy value if the given arg is a typed array instance"}, :name thi.ng.typedarrays.core/typed-array?, :variadic false, :file "resources/public/js/compiled/out/thi/ng/typedarrays/core.cljs", :end-column 19, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 138, :end-line 138, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Returns truthy value if the given arg is a typed array instance"}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:int32 :uint8-clamped :int16 :float32 :float64 :else :uint16 :array :int8 :uint32 :uint8}, :order [:float64 :int8 :int16 :uint8 :uint16 :uint8-clamped :uint32 :float32 :int32 :array :else]}, :doc nil}