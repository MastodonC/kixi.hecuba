;; Analyzed by ClojureScript 0.0-3297
{:use-macros {def-ndarray thi.ng.ndarray.macros}, :excludes #{}, :name thi.ng.ndarray.core, :imports nil, :requires {a thi.ng.typedarrays.core, thi.ng.typedarrays.core thi.ng.typedarrays.core, m thi.ng.math.core, thi.ng.math.core thi.ng.math.core}, :uses nil, :defs {NDArray2uint8 {:name thi.ng.ndarray.core/NDArray2uint8, :type true, :num-fields 6, :record false, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 161, :column 6}, make-raw-ndarray1-uint32 {:protocol-inline nil, :meta {:export true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0] [_shape0]])), :file nil}, :name thi.ng.ndarray.core/make-raw-ndarray1-uint32, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([data__19986__auto__ o__19987__auto__ p__33214 p__33215]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 6, :line 153, :max-fixed-arity 4, :fn-var true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0] [_shape0]]))}, ->NDArray3uint32 {:protocol-inline nil, :meta {:protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :factory :positional, :arglists (quote ([_data _offset _stride0 _stride1 _stride2 _shape0 _shape1 _shape2])), :file nil}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :name thi.ng.ndarray.core/->NDArray3uint32, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([_data _offset _stride0 _stride1 _stride2 _shape0 _shape1 _shape2]), :protocol-impl nil, :arglists-meta (nil nil), :column 6, :factory :positional, :line 175, :max-fixed-arity 8, :fn-var true, :arglists (quote ([_data _offset _stride0 _stride1 _stride2 _shape0 _shape1 _shape2])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}}, index-seq {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 39, :column 4, :end-line 39, :end-column 13, :protocol thi.ng.ndarray.core/PNDArray, :doc "Returns a lazy seq of all array indices in an ndarray view.", :arglists (quote ([_]))}, :protocol thi.ng.ndarray.core/PNDArray, :name thi.ng.ndarray.core/index-seq, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :end-column 13, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 39, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc "Returns a lazy seq of all array indices in an ndarray view."}, make-raw-ndarray3-float64 {:protocol-inline nil, :meta {:export true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1 _stride2] [_shape0 _shape1 _shape2]])), :file nil}, :name thi.ng.ndarray.core/make-raw-ndarray3-float64, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([data__19986__auto__ o__19987__auto__ p__34259 p__34260]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 6, :line 180, :max-fixed-arity 4, :fn-var true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1 _stride2] [_shape0 _shape1 _shape2]]))}, ndarray {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 194, :column 7, :end-line 194, :end-column 14, :arglists (quote ([type data] [type data shape])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([type data] [type data shape]), :arglists ([type data] [type data shape]), :arglists-meta (nil nil)}}, :name thi.ng.ndarray.core/ndarray, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([type data] [type data shape]), :arglists ([type data] [type data shape]), :arglists-meta (nil nil)}, :method-params ([type data] [type data shape]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 194, :end-line 194, :max-fixed-arity 3, :fn-var true, :arglists ([type data] [type data shape])}, ->NDArray2int16 {:protocol-inline nil, :meta {:protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :factory :positional, :arglists (quote ([_data _offset _stride0 _stride1 _shape0 _shape1])), :file nil}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :name thi.ng.ndarray.core/->NDArray2int16, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([_data _offset _stride0 _stride1 _shape0 _shape1]), :protocol-impl nil, :arglists-meta (nil nil), :column 6, :factory :positional, :line 166, :max-fixed-arity 6, :fn-var true, :arglists (quote ([_data _offset _stride0 _stride1 _shape0 _shape1])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}}, make-raw-ndarray3-generic {:protocol-inline nil, :meta {:export true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1 _stride2] [_shape0 _shape1 _shape2]])), :file nil}, :name thi.ng.ndarray.core/make-raw-ndarray3-generic, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([data__19986__auto__ o__19987__auto__ p__33818 p__33819]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 6, :line 171, :max-fixed-arity 4, :fn-var true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1 _stride2] [_shape0 _shape1 _shape2]]))}, ->NDArray3float64 {:protocol-inline nil, :meta {:protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :factory :positional, :arglists (quote ([_data _offset _stride0 _stride1 _stride2 _shape0 _shape1 _shape2])), :file nil}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :name thi.ng.ndarray.core/->NDArray3float64, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([_data _offset _stride0 _stride1 _stride2 _shape0 _shape1 _shape2]), :protocol-impl nil, :arglists-meta (nil nil), :column 6, :factory :positional, :line 180, :max-fixed-arity 8, :fn-var true, :arglists (quote ([_data _offset _stride0 _stride1 _stride2 _shape0 _shape1 _shape2])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}}, make-raw-ndarray4-uint16 {:protocol-inline nil, :meta {:export true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1 _stride2 _stride3] [_shape0 _shape1 _shape2 _shape3]])), :file nil}, :name thi.ng.ndarray.core/make-raw-ndarray4-uint16, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([data__19986__auto__ o__19987__auto__ p__34549 p__34550]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 6, :line 185, :max-fixed-arity 4, :fn-var true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1 _stride2 _stride3] [_shape0 _shape1 _shape2 _shape3]]))}, ->NDArray4int8 {:protocol-inline nil, :meta {:protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :factory :positional, :arglists (quote ([_data _offset _stride0 _stride1 _stride2 _stride3 _shape0 _shape1 _shape2 _shape3])), :file nil}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :name thi.ng.ndarray.core/->NDArray4int8, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([_data _offset _stride0 _stride1 _stride2 _stride3 _shape0 _shape1 _shape2 _shape3]), :protocol-impl nil, :arglists-meta (nil nil), :column 6, :factory :positional, :line 187, :max-fixed-arity 10, :fn-var true, :arglists (quote ([_data _offset _stride0 _stride1 _stride2 _stride3 _shape0 _shape1 _shape2 _shape3])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}}, make-raw-ndarray4-uint8 {:protocol-inline nil, :meta {:export true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1 _stride2 _stride3] [_shape0 _shape1 _shape2 _shape3]])), :file nil}, :name thi.ng.ndarray.core/make-raw-ndarray4-uint8, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([data__19986__auto__ o__19987__auto__ p__34375 p__34376]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 6, :line 183, :max-fixed-arity 4, :fn-var true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1 _stride2 _stride3] [_shape0 _shape1 _shape2 _shape3]]))}, make-raw-ndarray1-uint16 {:protocol-inline nil, :meta {:export true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0] [_shape0]])), :file nil}, :name thi.ng.ndarray.core/make-raw-ndarray1-uint16, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([data__19986__auto__ o__19987__auto__ p__33183 p__33184]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 6, :line 152, :max-fixed-arity 4, :fn-var true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0] [_shape0]]))}, ->NDArray2uint16 {:protocol-inline nil, :meta {:protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :factory :positional, :arglists (quote ([_data _offset _stride0 _stride1 _shape0 _shape1])), :file nil}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :name thi.ng.ndarray.core/->NDArray2uint16, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([_data _offset _stride0 _stride1 _shape0 _shape1]), :protocol-impl nil, :arglists-meta (nil nil), :column 6, :factory :positional, :line 163, :max-fixed-arity 6, :fn-var true, :arglists (quote ([_data _offset _stride0 _stride1 _shape0 _shape1])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}}, step {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 85, :column 4, :end-line 85, :end-column 8, :protocol thi.ng.ndarray.core/PNDArray, :doc "Returns new ndarray view with stride steps/direction changed as\n    per given vector. Values >1 result in skipping of items in that\n    dimension, negative value flip direction, `nil` keeps current\n    stride for that dimension. Does not mutate backing array.", :arglists (quote ([_ x] [_ x y] [_ x y z] [_ x y z w])), :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([_ x] [_ x y] [_ x y z] [_ x y z w]), :arglists ([_ x] [_ x y] [_ x y z] [_ x y z w]), :arglists-meta (nil nil nil nil)}}, :protocol thi.ng.ndarray.core/PNDArray, :name thi.ng.ndarray.core/step, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :end-column 8, :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([_ x] [_ x y] [_ x y z] [_ x y z w]), :arglists ([_ x] [_ x y] [_ x y z] [_ x y z w]), :arglists-meta (nil nil nil nil)}, :method-params ([_ x] [_ x y] [_ x y z] [_ x y z w]), :protocol-impl nil, :arglists-meta (nil nil nil nil), :column 1, :line 14, :end-line 85, :max-fixed-arity 5, :fn-var true, :arglists ([_ x] [_ x y] [_ x y z] [_ x y z w]), :doc "Returns new ndarray view with stride steps/direction changed as\n    per given vector. Values >1 result in skipping of items in that\n    dimension, negative value flip direction, `nil` keeps current\n    stride for that dimension. Does not mutate backing array."}, NDArray2uint32 {:name thi.ng.ndarray.core/NDArray2uint32, :type true, :num-fields 6, :record false, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 164, :column 6}, NDArray2int16 {:name thi.ng.ndarray.core/NDArray2int16, :type true, :num-fields 6, :record false, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 166, :column 6}, stride {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 23, :column 4, :end-line 23, :end-column 10, :protocol thi.ng.ndarray.core/PNDArray, :doc "Returns a vector of the ndarray's strides in each dimension.", :arglists (quote ([_]))}, :protocol thi.ng.ndarray.core/PNDArray, :name thi.ng.ndarray.core/stride, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :end-column 10, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc "Returns a vector of the ndarray's strides in each dimension."}, ->NDArray3uint8-clamped {:protocol-inline nil, :meta {:protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :factory :positional, :arglists (quote ([_data _offset _stride0 _stride1 _stride2 _shape0 _shape1 _shape2])), :file nil}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :name thi.ng.ndarray.core/->NDArray3uint8-clamped, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([_data _offset _stride0 _stride1 _stride2 _shape0 _shape1 _shape2]), :protocol-impl nil, :arglists-meta (nil nil), :column 6, :factory :positional, :line 173, :max-fixed-arity 8, :fn-var true, :arglists (quote ([_data _offset _stride0 _stride1 _stride2 _shape0 _shape1 _shape2])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}}, make-raw-ndarray2-float64 {:protocol-inline nil, :meta {:export true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1] [_shape0 _shape1]])), :file nil}, :name thi.ng.ndarray.core/make-raw-ndarray2-float64, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([data__19986__auto__ o__19987__auto__ p__33769 p__33770]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 6, :line 169, :max-fixed-arity 4, :fn-var true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1] [_shape0 _shape1]]))}, ->NDArray4float64 {:protocol-inline nil, :meta {:protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :factory :positional, :arglists (quote ([_data _offset _stride0 _stride1 _stride2 _stride3 _shape0 _shape1 _shape2 _shape3])), :file nil}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :name thi.ng.ndarray.core/->NDArray4float64, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([_data _offset _stride0 _stride1 _stride2 _stride3 _shape0 _shape1 _shape2 _shape3]), :protocol-impl nil, :arglists-meta (nil nil), :column 6, :factory :positional, :line 191, :max-fixed-arity 10, :fn-var true, :arglists (quote ([_data _offset _stride0 _stride1 _stride2 _stride3 _shape0 _shape1 _shape2 _shape3])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}}, get-at {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 43, :column 4, :end-line 43, :end-column 10, :protocol thi.ng.ndarray.core/PNDArray, :doc "Returns value at given position in an ndarray view (without bounds check,\n    assumes position is safe).", :arglists (quote ([_ x] [_ x y] [_ x y z] [_ x y z w])), :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([_ x] [_ x y] [_ x y z] [_ x y z w]), :arglists ([_ x] [_ x y] [_ x y z] [_ x y z w]), :arglists-meta (nil nil nil nil)}}, :protocol thi.ng.ndarray.core/PNDArray, :name thi.ng.ndarray.core/get-at, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :end-column 10, :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([_ x] [_ x y] [_ x y z] [_ x y z w]), :arglists ([_ x] [_ x y] [_ x y z] [_ x y z w]), :arglists-meta (nil nil nil nil)}, :method-params ([_ x] [_ x y] [_ x y z] [_ x y z w]), :protocol-impl nil, :arglists-meta (nil nil nil nil), :column 1, :line 14, :end-line 43, :max-fixed-arity 5, :fn-var true, :arglists ([_ x] [_ x y] [_ x y z] [_ x y z w]), :doc "Returns value at given position in an ndarray view (without bounds check,\n    assumes position is safe)."}, NDArray4generic {:name thi.ng.ndarray.core/NDArray4generic, :type true, :num-fields 10, :record false, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 182, :column 6}, NDArray3uint8 {:name thi.ng.ndarray.core/NDArray3uint8, :type true, :num-fields 8, :record false, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 172, :column 6}, NDArray1float32 {:name thi.ng.ndarray.core/NDArray1float32, :type true, :num-fields 4, :record false, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 157, :column 6}, index-pos {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 36, :column 4, :end-line 36, :end-column 13, :protocol thi.ng.ndarray.core/PNDArray, :doc "Computes relative position in an ndarray view from given absolute\n    array index.", :arglists (quote ([_ i]))}, :protocol thi.ng.ndarray.core/PNDArray, :name thi.ng.ndarray.core/index-pos, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :end-column 13, :method-params ([_ i]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 36, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ i])), :doc "Computes relative position in an ndarray view from given absolute\n    array index."}, data {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 15, :column 4, :end-line 15, :end-column 8, :protocol thi.ng.ndarray.core/PNDArray, :doc "Returns the backing data array.", :arglists (quote ([_]))}, :protocol thi.ng.ndarray.core/PNDArray, :name thi.ng.ndarray.core/data, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :end-column 8, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc "Returns the backing data array."}, get-at-index {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 49, :column 4, :end-line 49, :end-column 16, :protocol thi.ng.ndarray.core/PNDArray, :doc "Returns value at given global index in an ndarray view's backing\n    array.", :arglists (quote ([_ i]))}, :protocol thi.ng.ndarray.core/PNDArray, :name thi.ng.ndarray.core/get-at-index, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :end-column 16, :method-params ([_ i]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 49, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ i])), :doc "Returns value at given global index in an ndarray view's backing\n    array."}, NDArray4int32 {:name thi.ng.ndarray.core/NDArray4int32, :type true, :num-fields 10, :record false, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 189, :column 6}, make-raw-ndarray3-uint32 {:protocol-inline nil, :meta {:export true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1 _stride2] [_shape0 _shape1 _shape2]])), :file nil}, :name thi.ng.ndarray.core/make-raw-ndarray3-uint32, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([data__19986__auto__ o__19987__auto__ p__34014 p__34015]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 6, :line 175, :max-fixed-arity 4, :fn-var true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1 _stride2] [_shape0 _shape1 _shape2]]))}, make-raw-ndarray2-int16 {:protocol-inline nil, :meta {:export true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1] [_shape0 _shape1]])), :file nil}, :name thi.ng.ndarray.core/make-raw-ndarray2-int16, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([data__19986__auto__ o__19987__auto__ p__33649 p__33650]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 6, :line 166, :max-fixed-arity 4, :fn-var true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1] [_shape0 _shape1]]))}, ->NDArray3uint16 {:protocol-inline nil, :meta {:protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :factory :positional, :arglists (quote ([_data _offset _stride0 _stride1 _stride2 _shape0 _shape1 _shape2])), :file nil}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :name thi.ng.ndarray.core/->NDArray3uint16, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([_data _offset _stride0 _stride1 _stride2 _shape0 _shape1 _shape2]), :protocol-impl nil, :arglists-meta (nil nil), :column 6, :factory :positional, :line 174, :max-fixed-arity 8, :fn-var true, :arglists (quote ([_data _offset _stride0 _stride1 _stride2 _shape0 _shape1 _shape2])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}}, make-raw-ndarray4-int8 {:protocol-inline nil, :meta {:export true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1 _stride2 _stride3] [_shape0 _shape1 _shape2 _shape3]])), :file nil}, :name thi.ng.ndarray.core/make-raw-ndarray4-int8, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([data__19986__auto__ o__19987__auto__ p__34665 p__34666]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 6, :line 187, :max-fixed-arity 4, :fn-var true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1 _stride2 _stride3] [_shape0 _shape1 _shape2 _shape3]]))}, make-raw-ndarray3-int32 {:protocol-inline nil, :meta {:export true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1 _stride2] [_shape0 _shape1 _shape2]])), :file nil}, :name thi.ng.ndarray.core/make-raw-ndarray3-int32, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([data__19986__auto__ o__19987__auto__ p__34161 p__34162]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 6, :line 178, :max-fixed-arity 4, :fn-var true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1 _stride2] [_shape0 _shape1 _shape2]]))}, NDArray1generic {:name thi.ng.ndarray.core/NDArray1generic, :type true, :num-fields 4, :record false, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 149, :column 6}, make-raw-ndarray4-int32 {:protocol-inline nil, :meta {:export true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1 _stride2 _stride3] [_shape0 _shape1 _shape2 _shape3]])), :file nil}, :name thi.ng.ndarray.core/make-raw-ndarray4-int32, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([data__19986__auto__ o__19987__auto__ p__34781 p__34782]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 6, :line 189, :max-fixed-arity 4, :fn-var true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1 _stride2 _stride3] [_shape0 _shape1 _shape2 _shape3]]))}, NDArray3uint16 {:name thi.ng.ndarray.core/NDArray3uint16, :type true, :num-fields 8, :record false, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 174, :column 6}, make-raw-ndarray3-float32 {:protocol-inline nil, :meta {:export true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1 _stride2] [_shape0 _shape1 _shape2]])), :file nil}, :name thi.ng.ndarray.core/make-raw-ndarray3-float32, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([data__19986__auto__ o__19987__auto__ p__34210 p__34211]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 6, :line 179, :max-fixed-arity 4, :fn-var true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1 _stride2] [_shape0 _shape1 _shape2]]))}, ->NDArray2float64 {:protocol-inline nil, :meta {:protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :factory :positional, :arglists (quote ([_data _offset _stride0 _stride1 _shape0 _shape1])), :file nil}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :name thi.ng.ndarray.core/->NDArray2float64, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([_data _offset _stride0 _stride1 _shape0 _shape1]), :protocol-impl nil, :arglists-meta (nil nil), :column 6, :factory :positional, :line 169, :max-fixed-arity 6, :fn-var true, :arglists (quote ([_data _offset _stride0 _stride1 _shape0 _shape1])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}}, make-raw-ndarray4-float32 {:protocol-inline nil, :meta {:export true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1 _stride2 _stride3] [_shape0 _shape1 _shape2 _shape3]])), :file nil}, :name thi.ng.ndarray.core/make-raw-ndarray4-float32, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([data__19986__auto__ o__19987__auto__ p__34839 p__34840]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 6, :line 190, :max-fixed-arity 4, :fn-var true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1 _stride2 _stride3] [_shape0 _shape1 _shape2 _shape3]]))}, NDArray4uint8-clamped {:name thi.ng.ndarray.core/NDArray4uint8-clamped, :type true, :num-fields 10, :record false, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 184, :column 6}, update-at-safe {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 66, :column 4, :end-line 66, :end-column 18, :protocol thi.ng.ndarray.core/PNDArray, :doc "Same as `update-at` but with bounds check.", :arglists (quote ([_ x f] [_ x y f] [_ x y z f] [_ x y z w f])), :top-fn {:variadic false, :max-fixed-arity 6, :method-params ([_ x f] [_ x y f] [_ x y z f] [_ x y z w f]), :arglists ([_ x f] [_ x y f] [_ x y z f] [_ x y z w f]), :arglists-meta (nil nil nil nil)}}, :protocol thi.ng.ndarray.core/PNDArray, :name thi.ng.ndarray.core/update-at-safe, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 6, :method-params ([_ x f] [_ x y f] [_ x y z f] [_ x y z w f]), :arglists ([_ x f] [_ x y f] [_ x y z f] [_ x y z w f]), :arglists-meta (nil nil nil nil)}, :method-params ([_ x f] [_ x y f] [_ x y z f] [_ x y z w f]), :protocol-impl nil, :arglists-meta (nil nil nil nil), :column 1, :line 14, :end-line 66, :max-fixed-arity 6, :fn-var true, :arglists ([_ x f] [_ x y f] [_ x y z f] [_ x y z w f]), :doc "Same as `update-at` but with bounds check."}, ->NDArray1int16 {:protocol-inline nil, :meta {:protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :factory :positional, :arglists (quote ([_data _offset _stride0 _shape0])), :file nil}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :name thi.ng.ndarray.core/->NDArray1int16, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([_data _offset _stride0 _shape0]), :protocol-impl nil, :arglists-meta (nil nil), :column 6, :factory :positional, :line 155, :max-fixed-arity 4, :fn-var true, :arglists (quote ([_data _offset _stride0 _shape0])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}}, NDArray3int16 {:name thi.ng.ndarray.core/NDArray3int16, :type true, :num-fields 8, :record false, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 177, :column 6}, ->NDArray3uint8 {:protocol-inline nil, :meta {:protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :factory :positional, :arglists (quote ([_data _offset _stride0 _stride1 _stride2 _shape0 _shape1 _shape2])), :file nil}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :name thi.ng.ndarray.core/->NDArray3uint8, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([_data _offset _stride0 _stride1 _stride2 _shape0 _shape1 _shape2]), :protocol-impl nil, :arglists-meta (nil nil), :column 6, :factory :positional, :line 172, :max-fixed-arity 8, :fn-var true, :arglists (quote ([_data _offset _stride0 _stride1 _stride2 _shape0 _shape1 _shape2])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}}, ->NDArray1uint8-clamped {:protocol-inline nil, :meta {:protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :factory :positional, :arglists (quote ([_data _offset _stride0 _shape0])), :file nil}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :name thi.ng.ndarray.core/->NDArray1uint8-clamped, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([_data _offset _stride0 _shape0]), :protocol-impl nil, :arglists-meta (nil nil), :column 6, :factory :positional, :line 151, :max-fixed-arity 4, :fn-var true, :arglists (quote ([_data _offset _stride0 _shape0])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}}, make-raw-ndarray2-int32 {:protocol-inline nil, :meta {:export true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1] [_shape0 _shape1]])), :file nil}, :name thi.ng.ndarray.core/make-raw-ndarray2-int32, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([data__19986__auto__ o__19987__auto__ p__33689 p__33690]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 6, :line 167, :max-fixed-arity 4, :fn-var true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1] [_shape0 _shape1]]))}, data-type {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 17, :column 4, :end-line 17, :end-column 13, :protocol thi.ng.ndarray.core/PNDArray, :doc "Returns the ndarray's type id (keyword).", :arglists (quote ([_]))}, :protocol thi.ng.ndarray.core/PNDArray, :name thi.ng.ndarray.core/data-type, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :end-column 13, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc "Returns the ndarray's type id (keyword)."}, make-raw-ndarray2-uint32 {:protocol-inline nil, :meta {:export true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1] [_shape0 _shape1]])), :file nil}, :name thi.ng.ndarray.core/make-raw-ndarray2-uint32, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([data__19986__auto__ o__19987__auto__ p__33569 p__33570]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 6, :line 164, :max-fixed-arity 4, :fn-var true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1] [_shape0 _shape1]]))}, ->NDArray3float32 {:protocol-inline nil, :meta {:protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :factory :positional, :arglists (quote ([_data _offset _stride0 _stride1 _stride2 _shape0 _shape1 _shape2])), :file nil}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :name thi.ng.ndarray.core/->NDArray3float32, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([_data _offset _stride0 _stride1 _stride2 _shape0 _shape1 _shape2]), :protocol-impl nil, :arglists-meta (nil nil), :column 6, :factory :positional, :line 179, :max-fixed-arity 8, :fn-var true, :arglists (quote ([_data _offset _stride0 _stride1 _stride2 _shape0 _shape1 _shape2])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}}, ->NDArray4uint8-clamped {:protocol-inline nil, :meta {:protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :factory :positional, :arglists (quote ([_data _offset _stride0 _stride1 _stride2 _stride3 _shape0 _shape1 _shape2 _shape3])), :file nil}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :name thi.ng.ndarray.core/->NDArray4uint8-clamped, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([_data _offset _stride0 _stride1 _stride2 _stride3 _shape0 _shape1 _shape2 _shape3]), :protocol-impl nil, :arglists-meta (nil nil), :column 6, :factory :positional, :line 184, :max-fixed-arity 10, :fn-var true, :arglists (quote ([_data _offset _stride0 _stride1 _stride2 _stride3 _shape0 _shape1 _shape2 _shape3])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}}, NDArray1uint32 {:name thi.ng.ndarray.core/NDArray1uint32, :type true, :num-fields 4, :record false, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 153, :column 6}, ->NDArray2float32 {:protocol-inline nil, :meta {:protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :factory :positional, :arglists (quote ([_data _offset _stride0 _stride1 _shape0 _shape1])), :file nil}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :name thi.ng.ndarray.core/->NDArray2float32, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([_data _offset _stride0 _stride1 _shape0 _shape1]), :protocol-impl nil, :arglists-meta (nil nil), :column 6, :factory :positional, :line 168, :max-fixed-arity 6, :fn-var true, :arglists (quote ([_data _offset _stride0 _stride1 _shape0 _shape1])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}}, NDArray1uint16 {:name thi.ng.ndarray.core/NDArray1uint16, :type true, :num-fields 4, :record false, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 152, :column 6}, NDArray2float32 {:name thi.ng.ndarray.core/NDArray2float32, :type true, :num-fields 6, :record false, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 168, :column 6}, ->NDArray4uint8 {:protocol-inline nil, :meta {:protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :factory :positional, :arglists (quote ([_data _offset _stride0 _stride1 _stride2 _stride3 _shape0 _shape1 _shape2 _shape3])), :file nil}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :name thi.ng.ndarray.core/->NDArray4uint8, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([_data _offset _stride0 _stride1 _stride2 _stride3 _shape0 _shape1 _shape2 _shape3]), :protocol-impl nil, :arglists-meta (nil nil), :column 6, :factory :positional, :line 183, :max-fixed-arity 10, :fn-var true, :arglists (quote ([_data _offset _stride0 _stride1 _stride2 _stride3 _shape0 _shape1 _shape2 _shape3])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}}, NDArray3float64 {:name thi.ng.ndarray.core/NDArray3float64, :type true, :num-fields 8, :record false, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 180, :column 6}, make-raw-ndarray3-int16 {:protocol-inline nil, :meta {:export true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1 _stride2] [_shape0 _shape1 _shape2]])), :file nil}, :name thi.ng.ndarray.core/make-raw-ndarray3-int16, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([data__19986__auto__ o__19987__auto__ p__34112 p__34113]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 6, :line 177, :max-fixed-arity 4, :fn-var true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1 _stride2] [_shape0 _shape1 _shape2]]))}, ->NDArray3int8 {:protocol-inline nil, :meta {:protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :factory :positional, :arglists (quote ([_data _offset _stride0 _stride1 _stride2 _shape0 _shape1 _shape2])), :file nil}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :name thi.ng.ndarray.core/->NDArray3int8, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([_data _offset _stride0 _stride1 _stride2 _shape0 _shape1 _shape2]), :protocol-impl nil, :arglists-meta (nil nil), :column 6, :factory :positional, :line 176, :max-fixed-arity 8, :fn-var true, :arglists (quote ([_data _offset _stride0 _stride1 _stride2 _shape0 _shape1 _shape2])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}}, ->NDArray2int32 {:protocol-inline nil, :meta {:protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :factory :positional, :arglists (quote ([_data _offset _stride0 _stride1 _shape0 _shape1])), :file nil}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :name thi.ng.ndarray.core/->NDArray2int32, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([_data _offset _stride0 _stride1 _shape0 _shape1]), :protocol-impl nil, :arglists-meta (nil nil), :column 6, :factory :positional, :line 167, :max-fixed-arity 6, :fn-var true, :arglists (quote ([_data _offset _stride0 _stride1 _shape0 _shape1])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}}, NDArray4int16 {:name thi.ng.ndarray.core/NDArray4int16, :type true, :num-fields 10, :record false, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 188, :column 6}, make-raw-ndarray3-int8 {:protocol-inline nil, :meta {:export true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1 _stride2] [_shape0 _shape1 _shape2]])), :file nil}, :name thi.ng.ndarray.core/make-raw-ndarray3-int8, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([data__19986__auto__ o__19987__auto__ p__34063 p__34064]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 6, :line 176, :max-fixed-arity 4, :fn-var true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1 _stride2] [_shape0 _shape1 _shape2]]))}, offset {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 25, :column 4, :end-line 25, :end-column 10, :protocol thi.ng.ndarray.core/PNDArray, :doc "Returns the ndarray view's start index in the backing data array", :arglists (quote ([_]))}, :protocol thi.ng.ndarray.core/PNDArray, :name thi.ng.ndarray.core/offset, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :end-column 10, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc "Returns the ndarray view's start index in the backing data array"}, make-raw-ndarray3-uint16 {:protocol-inline nil, :meta {:export true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1 _stride2] [_shape0 _shape1 _shape2]])), :file nil}, :name thi.ng.ndarray.core/make-raw-ndarray3-uint16, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([data__19986__auto__ o__19987__auto__ p__33965 p__33966]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 6, :line 174, :max-fixed-arity 4, :fn-var true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1 _stride2] [_shape0 _shape1 _shape2]]))}, set-at {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 52, :column 4, :end-line 52, :end-column 10, :protocol thi.ng.ndarray.core/PNDArray, :doc "Sets backing data array at given position in an ndarray view to\n    new value v (without bounds check). Returns same NDArray instance.", :arglists (quote ([_ x v] [_ x y v] [_ x y z v] [_ x y z w v])), :top-fn {:variadic false, :max-fixed-arity 6, :method-params ([_ x v] [_ x y v] [_ x y z v] [_ x y z w v]), :arglists ([_ x v] [_ x y v] [_ x y z v] [_ x y z w v]), :arglists-meta (nil nil nil nil)}}, :protocol thi.ng.ndarray.core/PNDArray, :name thi.ng.ndarray.core/set-at, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :end-column 10, :top-fn {:variadic false, :max-fixed-arity 6, :method-params ([_ x v] [_ x y v] [_ x y z v] [_ x y z w v]), :arglists ([_ x v] [_ x y v] [_ x y z v] [_ x y z w v]), :arglists-meta (nil nil nil nil)}, :method-params ([_ x v] [_ x y v] [_ x y z v] [_ x y z w v]), :protocol-impl nil, :arglists-meta (nil nil nil nil), :column 1, :line 14, :end-line 52, :max-fixed-arity 6, :fn-var true, :arglists ([_ x v] [_ x y v] [_ x y z v] [_ x y z w v]), :doc "Sets backing data array at given position in an ndarray view to\n    new value v (without bounds check). Returns same NDArray instance."}, make-raw-ndarray1-uint8 {:protocol-inline nil, :meta {:export true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0] [_shape0]])), :file nil}, :name thi.ng.ndarray.core/make-raw-ndarray1-uint8, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([data__19986__auto__ o__19987__auto__ p__33121 p__33122]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 6, :line 150, :max-fixed-arity 4, :fn-var true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0] [_shape0]]))}, make-raw-ndarray1-int16 {:protocol-inline nil, :meta {:export true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0] [_shape0]])), :file nil}, :name thi.ng.ndarray.core/make-raw-ndarray1-int16, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([data__19986__auto__ o__19987__auto__ p__33276 p__33277]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 6, :line 155, :max-fixed-arity 4, :fn-var true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0] [_shape0]]))}, transpose {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 82, :column 4, :end-line 82, :end-column 13, :protocol thi.ng.ndarray.core/PNDArray, :doc "Returns a new ndarray view with stride order/axes swapped as per\n    given vector. Does not mutate backing array.", :arglists (quote ([_ x] [_ x y] [_ x y z] [_ x y z w])), :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([_ x] [_ x y] [_ x y z] [_ x y z w]), :arglists ([_ x] [_ x y] [_ x y z] [_ x y z w]), :arglists-meta (nil nil nil nil)}}, :protocol thi.ng.ndarray.core/PNDArray, :name thi.ng.ndarray.core/transpose, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([_ x] [_ x y] [_ x y z] [_ x y z w]), :arglists ([_ x] [_ x y] [_ x y z] [_ x y z w]), :arglists-meta (nil nil nil nil)}, :method-params ([_ x] [_ x y] [_ x y z] [_ x y z w]), :protocol-impl nil, :arglists-meta (nil nil nil nil), :column 1, :line 14, :end-line 82, :max-fixed-arity 5, :fn-var true, :arglists ([_ x] [_ x y] [_ x y z] [_ x y z w]), :doc "Returns a new ndarray view with stride order/axes swapped as per\n    given vector. Does not mutate backing array."}, get-at-safe {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 46, :column 4, :end-line 46, :end-column 15, :protocol thi.ng.ndarray.core/PNDArray, :doc "Returns value at given position in an ndarray view (with bounds\n    check)", :arglists (quote ([_ x] [_ x y] [_ x y z] [_ x y z w])), :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([_ x] [_ x y] [_ x y z] [_ x y z w]), :arglists ([_ x] [_ x y] [_ x y z] [_ x y z w]), :arglists-meta (nil nil nil nil)}}, :protocol thi.ng.ndarray.core/PNDArray, :name thi.ng.ndarray.core/get-at-safe, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([_ x] [_ x y] [_ x y z] [_ x y z w]), :arglists ([_ x] [_ x y] [_ x y z] [_ x y z w]), :arglists-meta (nil nil nil nil)}, :method-params ([_ x] [_ x y] [_ x y z] [_ x y z w]), :protocol-impl nil, :arglists-meta (nil nil nil nil), :column 1, :line 14, :end-line 46, :max-fixed-arity 5, :fn-var true, :arglists ([_ x] [_ x y] [_ x y z] [_ x y z w]), :doc "Returns value at given position in an ndarray view (with bounds\n    check)"}, pick {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 90, :column 4, :end-line 90, :end-column 8, :protocol thi.ng.ndarray.core/PNDArray, :doc "Generalized getter. Accepts n args (e.g. 3 for a 3D ndarray),\n    each selecting a dimension slice (nil skips a dimension). Returns\n    new ndarray view of selection, or if selecting in all dimensions,\n    returns array value at that point. Does not mutate backing array.", :arglists (quote ([_ x] [_ x y] [_ x y z] [_ x y z w])), :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([_ x] [_ x y] [_ x y z] [_ x y z w]), :arglists ([_ x] [_ x y] [_ x y z] [_ x y z w]), :arglists-meta (nil nil nil nil)}}, :protocol thi.ng.ndarray.core/PNDArray, :name thi.ng.ndarray.core/pick, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :end-column 8, :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([_ x] [_ x y] [_ x y z] [_ x y z w]), :arglists ([_ x] [_ x y] [_ x y z] [_ x y z w]), :arglists-meta (nil nil nil nil)}, :method-params ([_ x] [_ x y] [_ x y z] [_ x y z w]), :protocol-impl nil, :arglists-meta (nil nil nil nil), :column 1, :line 14, :end-line 90, :max-fixed-arity 5, :fn-var true, :arglists ([_ x] [_ x y] [_ x y z] [_ x y z w]), :doc "Generalized getter. Accepts n args (e.g. 3 for a 3D ndarray),\n    each selecting a dimension slice (nil skips a dimension). Returns\n    new ndarray view of selection, or if selecting in all dimensions,\n    returns array value at that point. Does not mutate backing array."}, truncate-l {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 78, :column 4, :end-line 78, :end-column 14, :protocol thi.ng.ndarray.core/PNDArray, :doc "Returns a new ndarray of same type with its shape truncated at\n    lower end, effectively shifting its start index/offset towards the\n    center of the view. Does not mutate backing array.", :arglists (quote ([_ x] [_ x y] [_ x y z] [_ x y z w])), :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([_ x] [_ x y] [_ x y z] [_ x y z w]), :arglists ([_ x] [_ x y] [_ x y z] [_ x y z w]), :arglists-meta (nil nil nil nil)}}, :protocol thi.ng.ndarray.core/PNDArray, :name thi.ng.ndarray.core/truncate-l, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([_ x] [_ x y] [_ x y z] [_ x y z w]), :arglists ([_ x] [_ x y] [_ x y z] [_ x y z w]), :arglists-meta (nil nil nil nil)}, :method-params ([_ x] [_ x y] [_ x y z] [_ x y z w]), :protocol-impl nil, :arglists-meta (nil nil nil nil), :column 1, :line 14, :end-line 78, :max-fixed-arity 5, :fn-var true, :arglists ([_ x] [_ x y] [_ x y z] [_ x y z w]), :doc "Returns a new ndarray of same type with its shape truncated at\n    lower end, effectively shifting its start index/offset towards the\n    center of the view. Does not mutate backing array."}, ->NDArray1uint8 {:protocol-inline nil, :meta {:protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :factory :positional, :arglists (quote ([_data _offset _stride0 _shape0])), :file nil}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :name thi.ng.ndarray.core/->NDArray1uint8, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([_data _offset _stride0 _shape0]), :protocol-impl nil, :arglists-meta (nil nil), :column 6, :factory :positional, :line 150, :max-fixed-arity 4, :fn-var true, :arglists (quote ([_data _offset _stride0 _shape0])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}}, make-raw-ndarray1-int32 {:protocol-inline nil, :meta {:export true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0] [_shape0]])), :file nil}, :name thi.ng.ndarray.core/make-raw-ndarray1-int32, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([data__19986__auto__ o__19987__auto__ p__33307 p__33308]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 6, :line 156, :max-fixed-arity 4, :fn-var true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0] [_shape0]]))}, ->NDArray2uint8-clamped {:protocol-inline nil, :meta {:protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :factory :positional, :arglists (quote ([_data _offset _stride0 _stride1 _shape0 _shape1])), :file nil}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :name thi.ng.ndarray.core/->NDArray2uint8-clamped, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([_data _offset _stride0 _stride1 _shape0 _shape1]), :protocol-impl nil, :arglists-meta (nil nil), :column 6, :factory :positional, :line 162, :max-fixed-arity 6, :fn-var true, :arglists (quote ([_data _offset _stride0 _stride1 _shape0 _shape1])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}}, NDArray4float64 {:name thi.ng.ndarray.core/NDArray4float64, :type true, :num-fields 10, :record false, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 191, :column 6}, ->NDArray1float64 {:protocol-inline nil, :meta {:protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :factory :positional, :arglists (quote ([_data _offset _stride0 _shape0])), :file nil}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :name thi.ng.ndarray.core/->NDArray1float64, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([_data _offset _stride0 _shape0]), :protocol-impl nil, :arglists-meta (nil nil), :column 6, :factory :positional, :line 158, :max-fixed-arity 4, :fn-var true, :arglists (quote ([_data _offset _stride0 _shape0])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}}, update-at {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 61, :column 4, :end-line 61, :end-column 13, :protocol thi.ng.ndarray.core/PNDArray, :doc "Applies function f to given position in an ndarray view and sets\n    backing array at same position to the return value of f. The\n    function f itself accepts m args: first the n coordinates of the\n    position and the value at this position", :arglists (quote ([_ x f] [_ x y f] [_ x y z f] [_ x y z w f])), :top-fn {:variadic false, :max-fixed-arity 6, :method-params ([_ x f] [_ x y f] [_ x y z f] [_ x y z w f]), :arglists ([_ x f] [_ x y f] [_ x y z f] [_ x y z w f]), :arglists-meta (nil nil nil nil)}}, :protocol thi.ng.ndarray.core/PNDArray, :name thi.ng.ndarray.core/update-at, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 6, :method-params ([_ x f] [_ x y f] [_ x y z f] [_ x y z w f]), :arglists ([_ x f] [_ x y f] [_ x y z f] [_ x y z w f]), :arglists-meta (nil nil nil nil)}, :method-params ([_ x f] [_ x y f] [_ x y z f] [_ x y z w f]), :protocol-impl nil, :arglists-meta (nil nil nil nil), :column 1, :line 14, :end-line 61, :max-fixed-arity 6, :fn-var true, :arglists ([_ x f] [_ x y f] [_ x y z f] [_ x y z w f]), :doc "Applies function f to given position in an ndarray view and sets\n    backing array at same position to the return value of f. The\n    function f itself accepts m args: first the n coordinates of the\n    position and the value at this position"}, PNDArray {:meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 14, :column 14, :end-line 14, :end-column 22, :doc nil, :protocol-symbol true, :protocol-info {:methods {index-seq [[_]], step [[_ x] [_ x y] [_ x y z] [_ x y z w]], stride [[_]], get-at [[_ x] [_ x y] [_ x y z] [_ x y z w]], index-pos [[_ i]], data [[_]], get-at-index [[_ i]], update-at-safe [[_ x f] [_ x y f] [_ x y z f] [_ x y z w f]], data-type [[_]], offset [[_]], set-at [[_ x v] [_ x y v] [_ x y z v] [_ x y z w v]], transpose [[_ x] [_ x y] [_ x y z] [_ x y z w]], get-at-safe [[_ x] [_ x y] [_ x y z] [_ x y z w]], pick [[_ x] [_ x y] [_ x y z] [_ x y z w]], truncate-l [[_ x] [_ x y] [_ x y z] [_ x y z w]], update-at [[_ x f] [_ x y f] [_ x y z f] [_ x y z w f]], index-at [[_ x] [_ x y] [_ x y z] [_ x y z w]], set-at-index [[_ i v]], set-at-safe [[_ x v] [_ x y v] [_ x y z v] [_ x y z w v]], truncate-h [[_ x] [_ x y] [_ x y z] [_ x y z w]], update-at-index [[_ i f]], size [[_]], position-seq [[_]], dimension [[_]], shape [[_]], extract [[_]]}}}, :protocol-symbol true, :name thi.ng.ndarray.core/PNDArray, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :end-column 22, :column 1, :line 14, :protocol-info {:methods {index-seq [[_]], step [[_ x] [_ x y] [_ x y z] [_ x y z w]], stride [[_]], get-at [[_ x] [_ x y] [_ x y z] [_ x y z w]], index-pos [[_ i]], data [[_]], get-at-index [[_ i]], update-at-safe [[_ x f] [_ x y f] [_ x y z f] [_ x y z w f]], data-type [[_]], offset [[_]], set-at [[_ x v] [_ x y v] [_ x y z v] [_ x y z w v]], transpose [[_ x] [_ x y] [_ x y z] [_ x y z w]], get-at-safe [[_ x] [_ x y] [_ x y z] [_ x y z w]], pick [[_ x] [_ x y] [_ x y z] [_ x y z w]], truncate-l [[_ x] [_ x y] [_ x y z] [_ x y z w]], update-at [[_ x f] [_ x y f] [_ x y z f] [_ x y z w f]], index-at [[_ x] [_ x y] [_ x y z] [_ x y z w]], set-at-index [[_ i v]], set-at-safe [[_ x v] [_ x y v] [_ x y z v] [_ x y z w v]], truncate-h [[_ x] [_ x y] [_ x y z] [_ x y z w]], update-at-index [[_ i f]], size [[_]], position-seq [[_]], dimension [[_]], shape [[_]], extract [[_]]}}, :info nil, :end-line 14, :impls #{thi.ng.ndarray.core/NDArray4int32 thi.ng.ndarray.core/NDArray4uint8-clamped thi.ng.ndarray.core/NDArray3uint16 thi.ng.ndarray.core/NDArray1float32 thi.ng.ndarray.core/NDArray1int32 thi.ng.ndarray.core/NDArray1uint32 thi.ng.ndarray.core/NDArray1uint16 thi.ng.ndarray.core/NDArray4int16 thi.ng.ndarray.core/NDArray2int8 thi.ng.ndarray.core/NDArray2uint32 thi.ng.ndarray.core/NDArray4float32 thi.ng.ndarray.core/NDArray2int16 thi.ng.ndarray.core/NDArray4generic thi.ng.ndarray.core/NDArray3float64 thi.ng.ndarray.core/NDArray3generic thi.ng.ndarray.core/NDArray4float64 thi.ng.ndarray.core/NDArray2float64 thi.ng.ndarray.core/NDArray1uint8 thi.ng.ndarray.core/NDArray2uint16 thi.ng.ndarray.core/NDArray3int16 thi.ng.ndarray.core/NDArray4uint8 thi.ng.ndarray.core/NDArray3uint8 thi.ng.ndarray.core/NDArray3uint8-clamped thi.ng.ndarray.core/NDArray4int8 thi.ng.ndarray.core/NDArray3uint32 thi.ng.ndarray.core/NDArray1int16 thi.ng.ndarray.core/NDArray3float32 thi.ng.ndarray.core/NDArray1float64 thi.ng.ndarray.core/NDArray2float32 thi.ng.ndarray.core/NDArray1uint8-clamped thi.ng.ndarray.core/NDArray2int32 thi.ng.ndarray.core/NDArray4uint32 thi.ng.ndarray.core/NDArray2uint8-clamped thi.ng.ndarray.core/NDArray1int8 thi.ng.ndarray.core/NDArray3int32 thi.ng.ndarray.core/NDArray1generic thi.ng.ndarray.core/NDArray2uint8 thi.ng.ndarray.core/NDArray4uint16 thi.ng.ndarray.core/NDArray2generic thi.ng.ndarray.core/NDArray3int8}, :doc nil}, NDArray2float64 {:name thi.ng.ndarray.core/NDArray2float64, :type true, :num-fields 6, :record false, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 169, :column 6}, ->NDArray4int32 {:protocol-inline nil, :meta {:protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :factory :positional, :arglists (quote ([_data _offset _stride0 _stride1 _stride2 _stride3 _shape0 _shape1 _shape2 _shape3])), :file nil}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :name thi.ng.ndarray.core/->NDArray4int32, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([_data _offset _stride0 _stride1 _stride2 _stride3 _shape0 _shape1 _shape2 _shape3]), :protocol-impl nil, :arglists-meta (nil nil), :column 6, :factory :positional, :line 189, :max-fixed-arity 10, :fn-var true, :arglists (quote ([_data _offset _stride0 _stride1 _stride2 _stride3 _shape0 _shape1 _shape2 _shape3])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}}, make-raw-ndarray2-float32 {:protocol-inline nil, :meta {:export true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1] [_shape0 _shape1]])), :file nil}, :name thi.ng.ndarray.core/make-raw-ndarray2-float32, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([data__19986__auto__ o__19987__auto__ p__33729 p__33730]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 6, :line 168, :max-fixed-arity 4, :fn-var true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1] [_shape0 _shape1]]))}, ->NDArray2int8 {:protocol-inline nil, :meta {:protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :factory :positional, :arglists (quote ([_data _offset _stride0 _stride1 _shape0 _shape1])), :file nil}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :name thi.ng.ndarray.core/->NDArray2int8, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([_data _offset _stride0 _stride1 _shape0 _shape1]), :protocol-impl nil, :arglists-meta (nil nil), :column 6, :factory :positional, :line 165, :max-fixed-arity 6, :fn-var true, :arglists (quote ([_data _offset _stride0 _stride1 _shape0 _shape1])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}}, NDArray2int32 {:name thi.ng.ndarray.core/NDArray2int32, :type true, :num-fields 6, :record false, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 167, :column 6}, ctor-registry {:name thi.ng.ndarray.core/ctor-registry, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 107, :column 1, :end-line 107, :end-column 19, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 107, :column 6, :end-line 107, :end-column 19}}, NDArray1uint8-clamped {:name thi.ng.ndarray.core/NDArray1uint8-clamped, :type true, :num-fields 4, :record false, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 151, :column 6}, NDArray2uint16 {:name thi.ng.ndarray.core/NDArray2uint16, :type true, :num-fields 6, :record false, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 163, :column 6}, make-raw-ndarray2-uint8-clamped {:protocol-inline nil, :meta {:export true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1] [_shape0 _shape1]])), :file nil}, :name thi.ng.ndarray.core/make-raw-ndarray2-uint8-clamped, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([data__19986__auto__ o__19987__auto__ p__33489 p__33490]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 6, :line 162, :max-fixed-arity 4, :fn-var true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1] [_shape0 _shape1]]))}, ->NDArray2generic {:protocol-inline nil, :meta {:protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :factory :positional, :arglists (quote ([_data _offset _stride0 _stride1 _shape0 _shape1])), :file nil}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :name thi.ng.ndarray.core/->NDArray2generic, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([_data _offset _stride0 _stride1 _shape0 _shape1]), :protocol-impl nil, :arglists-meta (nil nil), :column 6, :factory :positional, :line 160, :max-fixed-arity 6, :fn-var true, :arglists (quote ([_data _offset _stride0 _stride1 _shape0 _shape1])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}}, make-raw-ndarray2-uint16 {:protocol-inline nil, :meta {:export true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1] [_shape0 _shape1]])), :file nil}, :name thi.ng.ndarray.core/make-raw-ndarray2-uint16, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([data__19986__auto__ o__19987__auto__ p__33529 p__33530]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 6, :line 163, :max-fixed-arity 4, :fn-var true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1] [_shape0 _shape1]]))}, NDArray3float32 {:name thi.ng.ndarray.core/NDArray3float32, :type true, :num-fields 8, :record false, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 179, :column 6}, index-at {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 33, :column 4, :end-line 33, :end-column 12, :protocol thi.ng.ndarray.core/PNDArray, :doc "Returns the global index into the backing array for given\n    position in an ndarray view.", :arglists (quote ([_ x] [_ x y] [_ x y z] [_ x y z w])), :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([_ x] [_ x y] [_ x y z] [_ x y z w]), :arglists ([_ x] [_ x y] [_ x y z] [_ x y z w]), :arglists-meta (nil nil nil nil)}}, :protocol thi.ng.ndarray.core/PNDArray, :name thi.ng.ndarray.core/index-at, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([_ x] [_ x y] [_ x y z] [_ x y z w]), :arglists ([_ x] [_ x y] [_ x y z] [_ x y z w]), :arglists-meta (nil nil nil nil)}, :method-params ([_ x] [_ x y] [_ x y z] [_ x y z w]), :protocol-impl nil, :arglists-meta (nil nil nil nil), :column 1, :line 14, :end-line 33, :max-fixed-arity 5, :fn-var true, :arglists ([_ x] [_ x y] [_ x y z] [_ x y z w]), :doc "Returns the global index into the backing array for given\n    position in an ndarray view."}, ->NDArray1generic {:protocol-inline nil, :meta {:protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :factory :positional, :arglists (quote ([_data _offset _stride0 _shape0])), :file nil}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :name thi.ng.ndarray.core/->NDArray1generic, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([_data _offset _stride0 _shape0]), :protocol-impl nil, :arglists-meta (nil nil), :column 6, :factory :positional, :line 149, :max-fixed-arity 4, :fn-var true, :arglists (quote ([_data _offset _stride0 _shape0])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}}, NDArray2int8 {:name thi.ng.ndarray.core/NDArray2int8, :type true, :num-fields 6, :record false, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 165, :column 6}, ->NDArray2uint8 {:protocol-inline nil, :meta {:protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :factory :positional, :arglists (quote ([_data _offset _stride0 _stride1 _shape0 _shape1])), :file nil}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :name thi.ng.ndarray.core/->NDArray2uint8, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([_data _offset _stride0 _stride1 _shape0 _shape1]), :protocol-impl nil, :arglists-meta (nil nil), :column 6, :factory :positional, :line 161, :max-fixed-arity 6, :fn-var true, :arglists (quote ([_data _offset _stride0 _stride1 _shape0 _shape1])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}}, NDArray4float32 {:name thi.ng.ndarray.core/NDArray4float32, :type true, :num-fields 10, :record false, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 190, :column 6}, NDArray2uint8-clamped {:name thi.ng.ndarray.core/NDArray2uint8-clamped, :type true, :num-fields 6, :record false, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 162, :column 6}, NDArray4uint16 {:name thi.ng.ndarray.core/NDArray4uint16, :type true, :num-fields 10, :record false, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 185, :column 6}, set-at-index {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 58, :column 4, :end-line 58, :end-column 16, :protocol thi.ng.ndarray.core/PNDArray, :doc "Sets backing data array at given global index to new value\n    v (without bounds check). Returns same NDArray instance.", :arglists (quote ([_ i v]))}, :protocol thi.ng.ndarray.core/PNDArray, :name thi.ng.ndarray.core/set-at-index, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :end-column 16, :method-params ([_ i v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 58, :max-fixed-arity 3, :fn-var true, :arglists (quote ([_ i v])), :doc "Sets backing data array at given global index to new value\n    v (without bounds check). Returns same NDArray instance."}, NDArray1int8 {:name thi.ng.ndarray.core/NDArray1int8, :type true, :num-fields 4, :record false, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 154, :column 6}, make-raw-ndarray2-generic {:protocol-inline nil, :meta {:export true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1] [_shape0 _shape1]])), :file nil}, :name thi.ng.ndarray.core/make-raw-ndarray2-generic, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([data__19986__auto__ o__19987__auto__ p__33409 p__33410]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 6, :line 160, :max-fixed-arity 4, :fn-var true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1] [_shape0 _shape1]]))}, NDArray1uint8 {:name thi.ng.ndarray.core/NDArray1uint8, :type true, :num-fields 4, :record false, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 150, :column 6}, set-at-safe {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 55, :column 4, :end-line 55, :end-column 15, :protocol thi.ng.ndarray.core/PNDArray, :doc "Sets backing array at given position in an ndarray view to\n    new value v (with bounds check). Returns same NDArray instance.", :arglists (quote ([_ x v] [_ x y v] [_ x y z v] [_ x y z w v])), :top-fn {:variadic false, :max-fixed-arity 6, :method-params ([_ x v] [_ x y v] [_ x y z v] [_ x y z w v]), :arglists ([_ x v] [_ x y v] [_ x y z v] [_ x y z w v]), :arglists-meta (nil nil nil nil)}}, :protocol thi.ng.ndarray.core/PNDArray, :name thi.ng.ndarray.core/set-at-safe, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 6, :method-params ([_ x v] [_ x y v] [_ x y z v] [_ x y z w v]), :arglists ([_ x v] [_ x y v] [_ x y z v] [_ x y z w v]), :arglists-meta (nil nil nil nil)}, :method-params ([_ x v] [_ x y v] [_ x y z v] [_ x y z w v]), :protocol-impl nil, :arglists-meta (nil nil nil nil), :column 1, :line 14, :end-line 55, :max-fixed-arity 6, :fn-var true, :arglists ([_ x v] [_ x y v] [_ x y z v] [_ x y z w v]), :doc "Sets backing array at given position in an ndarray view to\n    new value v (with bounds check). Returns same NDArray instance."}, make-raw-ndarray1-int8 {:protocol-inline nil, :meta {:export true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0] [_shape0]])), :file nil}, :name thi.ng.ndarray.core/make-raw-ndarray1-int8, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([data__19986__auto__ o__19987__auto__ p__33245 p__33246]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 6, :line 154, :max-fixed-arity 4, :fn-var true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0] [_shape0]]))}, NDArray3int8 {:name thi.ng.ndarray.core/NDArray3int8, :type true, :num-fields 8, :record false, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 176, :column 6}, ->NDArray3int16 {:protocol-inline nil, :meta {:protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :factory :positional, :arglists (quote ([_data _offset _stride0 _stride1 _stride2 _shape0 _shape1 _shape2])), :file nil}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :name thi.ng.ndarray.core/->NDArray3int16, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([_data _offset _stride0 _stride1 _stride2 _shape0 _shape1 _shape2]), :protocol-impl nil, :arglists-meta (nil nil), :column 6, :factory :positional, :line 177, :max-fixed-arity 8, :fn-var true, :arglists (quote ([_data _offset _stride0 _stride1 _stride2 _shape0 _shape1 _shape2])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}}, ->NDArray4generic {:protocol-inline nil, :meta {:protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :factory :positional, :arglists (quote ([_data _offset _stride0 _stride1 _stride2 _stride3 _shape0 _shape1 _shape2 _shape3])), :file nil}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :name thi.ng.ndarray.core/->NDArray4generic, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([_data _offset _stride0 _stride1 _stride2 _stride3 _shape0 _shape1 _shape2 _shape3]), :protocol-impl nil, :arglists-meta (nil nil), :column 6, :factory :positional, :line 182, :max-fixed-arity 10, :fn-var true, :arglists (quote ([_data _offset _stride0 _stride1 _stride2 _stride3 _shape0 _shape1 _shape2 _shape3])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}}, NDArray4uint8 {:name thi.ng.ndarray.core/NDArray4uint8, :type true, :num-fields 10, :record false, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 183, :column 6}, shape->stride {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 99, :column 7, :end-line 99, :end-column 20, :arglists (quote ([shape]))}, :name thi.ng.ndarray.core/shape->stride, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :end-column 20, :method-params ([shape]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 1, :fn-var true, :arglists (quote ([shape]))}, ->NDArray4int16 {:protocol-inline nil, :meta {:protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :factory :positional, :arglists (quote ([_data _offset _stride0 _stride1 _stride2 _stride3 _shape0 _shape1 _shape2 _shape3])), :file nil}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :name thi.ng.ndarray.core/->NDArray4int16, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([_data _offset _stride0 _stride1 _stride2 _stride3 _shape0 _shape1 _shape2 _shape3]), :protocol-impl nil, :arglists-meta (nil nil), :column 6, :factory :positional, :line 188, :max-fixed-arity 10, :fn-var true, :arglists (quote ([_data _offset _stride0 _stride1 _stride2 _stride3 _shape0 _shape1 _shape2 _shape3])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}}, make-raw-ndarray4-uint32 {:protocol-inline nil, :meta {:export true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1 _stride2 _stride3] [_shape0 _shape1 _shape2 _shape3]])), :file nil}, :name thi.ng.ndarray.core/make-raw-ndarray4-uint32, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([data__19986__auto__ o__19987__auto__ p__34607 p__34608]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 6, :line 186, :max-fixed-arity 4, :fn-var true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1 _stride2 _stride3] [_shape0 _shape1 _shape2 _shape3]]))}, ->NDArray3generic {:protocol-inline nil, :meta {:protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :factory :positional, :arglists (quote ([_data _offset _stride0 _stride1 _stride2 _shape0 _shape1 _shape2])), :file nil}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :name thi.ng.ndarray.core/->NDArray3generic, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([_data _offset _stride0 _stride1 _stride2 _shape0 _shape1 _shape2]), :protocol-impl nil, :arglists-meta (nil nil), :column 6, :factory :positional, :line 171, :max-fixed-arity 8, :fn-var true, :arglists (quote ([_data _offset _stride0 _stride1 _stride2 _shape0 _shape1 _shape2])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}}, ->NDArray4uint16 {:protocol-inline nil, :meta {:protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :factory :positional, :arglists (quote ([_data _offset _stride0 _stride1 _stride2 _stride3 _shape0 _shape1 _shape2 _shape3])), :file nil}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :name thi.ng.ndarray.core/->NDArray4uint16, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([_data _offset _stride0 _stride1 _stride2 _stride3 _shape0 _shape1 _shape2 _shape3]), :protocol-impl nil, :arglists-meta (nil nil), :column 6, :factory :positional, :line 185, :max-fixed-arity 10, :fn-var true, :arglists (quote ([_data _offset _stride0 _stride1 _stride2 _stride3 _shape0 _shape1 _shape2 _shape3])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}}, truncate-h {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 73, :column 4, :end-line 73, :end-column 14, :protocol thi.ng.ndarray.core/PNDArray, :doc "Returns a new ndarray of same type with its shape truncated at\n    top end. Negative args are considered offsets from current shape.\n    nil values keep shape in that dimension. Does not mutate backing\n    array.", :arglists (quote ([_ x] [_ x y] [_ x y z] [_ x y z w])), :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([_ x] [_ x y] [_ x y z] [_ x y z w]), :arglists ([_ x] [_ x y] [_ x y z] [_ x y z w]), :arglists-meta (nil nil nil nil)}}, :protocol thi.ng.ndarray.core/PNDArray, :name thi.ng.ndarray.core/truncate-h, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([_ x] [_ x y] [_ x y z] [_ x y z w]), :arglists ([_ x] [_ x y] [_ x y z] [_ x y z w]), :arglists-meta (nil nil nil nil)}, :method-params ([_ x] [_ x y] [_ x y z] [_ x y z w]), :protocol-impl nil, :arglists-meta (nil nil nil nil), :column 1, :line 14, :end-line 73, :max-fixed-arity 5, :fn-var true, :arglists ([_ x] [_ x y] [_ x y z] [_ x y z w]), :doc "Returns a new ndarray of same type with its shape truncated at\n    top end. Negative args are considered offsets from current shape.\n    nil values keep shape in that dimension. Does not mutate backing\n    array."}, ->NDArray1uint32 {:protocol-inline nil, :meta {:protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :factory :positional, :arglists (quote ([_data _offset _stride0 _shape0])), :file nil}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :name thi.ng.ndarray.core/->NDArray1uint32, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([_data _offset _stride0 _shape0]), :protocol-impl nil, :arglists-meta (nil nil), :column 6, :factory :positional, :line 153, :max-fixed-arity 4, :fn-var true, :arglists (quote ([_data _offset _stride0 _shape0])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}}, make-raw-ndarray2-uint8 {:protocol-inline nil, :meta {:export true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1] [_shape0 _shape1]])), :file nil}, :name thi.ng.ndarray.core/make-raw-ndarray2-uint8, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([data__19986__auto__ o__19987__auto__ p__33449 p__33450]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 6, :line 161, :max-fixed-arity 4, :fn-var true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1] [_shape0 _shape1]]))}, update-at-index {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 68, :column 4, :end-line 68, :end-column 19, :protocol thi.ng.ndarray.core/PNDArray, :doc "Applies function f to given global index in an ndarray's view\n    backing array and sets it to the return value of f. The\n    function f itself accepts 2 args: the supplied array index\n    and the array's value at this index", :arglists (quote ([_ i f]))}, :protocol thi.ng.ndarray.core/PNDArray, :name thi.ng.ndarray.core/update-at-index, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :end-column 19, :method-params ([_ i f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 68, :max-fixed-arity 3, :fn-var true, :arglists (quote ([_ i f])), :doc "Applies function f to given global index in an ndarray's view\n    backing array and sets it to the return value of f. The\n    function f itself accepts 2 args: the supplied array index\n    and the array's value at this index"}, make-raw-ndarray4-float64 {:protocol-inline nil, :meta {:export true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1 _stride2 _stride3] [_shape0 _shape1 _shape2 _shape3]])), :file nil}, :name thi.ng.ndarray.core/make-raw-ndarray4-float64, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([data__19986__auto__ o__19987__auto__ p__34433 p__34434]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 6, :line 191, :max-fixed-arity 4, :fn-var true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1 _stride2 _stride3] [_shape0 _shape1 _shape2 _shape3]]))}, size {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 27, :column 4, :end-line 27, :end-column 8, :protocol thi.ng.ndarray.core/PNDArray, :doc "Returns the element count of an ndarray view", :arglists (quote ([_]))}, :protocol thi.ng.ndarray.core/PNDArray, :name thi.ng.ndarray.core/size, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :end-column 8, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc "Returns the element count of an ndarray view"}, NDArray3generic {:name thi.ng.ndarray.core/NDArray3generic, :type true, :num-fields 8, :record false, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 171, :column 6}, NDArray4uint32 {:name thi.ng.ndarray.core/NDArray4uint32, :type true, :num-fields 10, :record false, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 186, :column 6}, NDArray4int8 {:name thi.ng.ndarray.core/NDArray4int8, :type true, :num-fields 10, :record false, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 187, :column 6}, ->NDArray4float32 {:protocol-inline nil, :meta {:protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :factory :positional, :arglists (quote ([_data _offset _stride0 _stride1 _stride2 _stride3 _shape0 _shape1 _shape2 _shape3])), :file nil}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :name thi.ng.ndarray.core/->NDArray4float32, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([_data _offset _stride0 _stride1 _stride2 _stride3 _shape0 _shape1 _shape2 _shape3]), :protocol-impl nil, :arglists-meta (nil nil), :column 6, :factory :positional, :line 190, :max-fixed-arity 10, :fn-var true, :arglists (quote ([_data _offset _stride0 _stride1 _stride2 _stride3 _shape0 _shape1 _shape2 _shape3])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}}, position-seq {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 41, :column 4, :end-line 41, :end-column 16, :protocol thi.ng.ndarray.core/PNDArray, :doc "Returns a lazy seq of all position vectors in an ndarray view.", :arglists (quote ([_]))}, :protocol thi.ng.ndarray.core/PNDArray, :name thi.ng.ndarray.core/position-seq, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :end-column 16, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 41, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc "Returns a lazy seq of all position vectors in an ndarray view."}, NDArray3uint8-clamped {:name thi.ng.ndarray.core/NDArray3uint8-clamped, :type true, :num-fields 8, :record false, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 173, :column 6}, ->NDArray1int8 {:protocol-inline nil, :meta {:protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :factory :positional, :arglists (quote ([_data _offset _stride0 _shape0])), :file nil}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :name thi.ng.ndarray.core/->NDArray1int8, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([_data _offset _stride0 _shape0]), :protocol-impl nil, :arglists-meta (nil nil), :column 6, :factory :positional, :line 154, :max-fixed-arity 4, :fn-var true, :arglists (quote ([_data _offset _stride0 _shape0])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}}, ->NDArray3int32 {:protocol-inline nil, :meta {:protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :factory :positional, :arglists (quote ([_data _offset _stride0 _stride1 _stride2 _shape0 _shape1 _shape2])), :file nil}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :name thi.ng.ndarray.core/->NDArray3int32, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([_data _offset _stride0 _stride1 _stride2 _shape0 _shape1 _shape2]), :protocol-impl nil, :arglists-meta (nil nil), :column 6, :factory :positional, :line 178, :max-fixed-arity 8, :fn-var true, :arglists (quote ([_data _offset _stride0 _stride1 _stride2 _shape0 _shape1 _shape2])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}}, ->NDArray1float32 {:protocol-inline nil, :meta {:protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :factory :positional, :arglists (quote ([_data _offset _stride0 _shape0])), :file nil}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :name thi.ng.ndarray.core/->NDArray1float32, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([_data _offset _stride0 _shape0]), :protocol-impl nil, :arglists-meta (nil nil), :column 6, :factory :positional, :line 157, :max-fixed-arity 4, :fn-var true, :arglists (quote ([_data _offset _stride0 _shape0])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}}, ->NDArray2uint32 {:protocol-inline nil, :meta {:protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :factory :positional, :arglists (quote ([_data _offset _stride0 _stride1 _shape0 _shape1])), :file nil}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :name thi.ng.ndarray.core/->NDArray2uint32, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([_data _offset _stride0 _stride1 _shape0 _shape1]), :protocol-impl nil, :arglists-meta (nil nil), :column 6, :factory :positional, :line 164, :max-fixed-arity 6, :fn-var true, :arglists (quote ([_data _offset _stride0 _stride1 _shape0 _shape1])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}}, NDArray1int16 {:name thi.ng.ndarray.core/NDArray1int16, :type true, :num-fields 4, :record false, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 155, :column 6}, ->NDArray4uint32 {:protocol-inline nil, :meta {:protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :factory :positional, :arglists (quote ([_data _offset _stride0 _stride1 _stride2 _stride3 _shape0 _shape1 _shape2 _shape3])), :file nil}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :name thi.ng.ndarray.core/->NDArray4uint32, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([_data _offset _stride0 _stride1 _stride2 _stride3 _shape0 _shape1 _shape2 _shape3]), :protocol-impl nil, :arglists-meta (nil nil), :column 6, :factory :positional, :line 186, :max-fixed-arity 10, :fn-var true, :arglists (quote ([_data _offset _stride0 _stride1 _stride2 _stride3 _shape0 _shape1 _shape2 _shape3])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}}, NDArray3uint32 {:name thi.ng.ndarray.core/NDArray3uint32, :type true, :num-fields 8, :record false, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 175, :column 6}, ->NDArray1uint16 {:protocol-inline nil, :meta {:protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :factory :positional, :arglists (quote ([_data _offset _stride0 _shape0])), :file nil}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :name thi.ng.ndarray.core/->NDArray1uint16, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([_data _offset _stride0 _shape0]), :protocol-impl nil, :arglists-meta (nil nil), :column 6, :factory :positional, :line 152, :max-fixed-arity 4, :fn-var true, :arglists (quote ([_data _offset _stride0 _shape0])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}}, NDArray2generic {:name thi.ng.ndarray.core/NDArray2generic, :type true, :num-fields 6, :record false, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 160, :column 6}, make-raw-ndarray3-uint8 {:protocol-inline nil, :meta {:export true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1 _stride2] [_shape0 _shape1 _shape2]])), :file nil}, :name thi.ng.ndarray.core/make-raw-ndarray3-uint8, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([data__19986__auto__ o__19987__auto__ p__33867 p__33868]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 6, :line 172, :max-fixed-arity 4, :fn-var true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1 _stride2] [_shape0 _shape1 _shape2]]))}, NDArray1float64 {:name thi.ng.ndarray.core/NDArray1float64, :type true, :num-fields 4, :record false, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 158, :column 6}, make-raw-ndarray1-float64 {:protocol-inline nil, :meta {:export true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0] [_shape0]])), :file nil}, :name thi.ng.ndarray.core/make-raw-ndarray1-float64, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([data__19986__auto__ o__19987__auto__ p__33369 p__33370]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 6, :line 158, :max-fixed-arity 4, :fn-var true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0] [_shape0]]))}, make-raw-ndarray4-int16 {:protocol-inline nil, :meta {:export true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1 _stride2 _stride3] [_shape0 _shape1 _shape2 _shape3]])), :file nil}, :name thi.ng.ndarray.core/make-raw-ndarray4-int16, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([data__19986__auto__ o__19987__auto__ p__34723 p__34724]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 6, :line 188, :max-fixed-arity 4, :fn-var true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1 _stride2 _stride3] [_shape0 _shape1 _shape2 _shape3]]))}, make-raw-ndarray3-uint8-clamped {:protocol-inline nil, :meta {:export true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1 _stride2] [_shape0 _shape1 _shape2]])), :file nil}, :name thi.ng.ndarray.core/make-raw-ndarray3-uint8-clamped, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([data__19986__auto__ o__19987__auto__ p__33916 p__33917]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 6, :line 173, :max-fixed-arity 4, :fn-var true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1 _stride2] [_shape0 _shape1 _shape2]]))}, make-raw-ndarray1-generic {:protocol-inline nil, :meta {:export true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0] [_shape0]])), :file nil}, :name thi.ng.ndarray.core/make-raw-ndarray1-generic, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([data__19986__auto__ o__19987__auto__ p__33090 p__33091]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 6, :line 149, :max-fixed-arity 4, :fn-var true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0] [_shape0]]))}, make-raw-ndarray1-float32 {:protocol-inline nil, :meta {:export true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0] [_shape0]])), :file nil}, :name thi.ng.ndarray.core/make-raw-ndarray1-float32, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([data__19986__auto__ o__19987__auto__ p__33338 p__33339]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 6, :line 157, :max-fixed-arity 4, :fn-var true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0] [_shape0]]))}, make-raw-ndarray4-uint8-clamped {:protocol-inline nil, :meta {:export true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1 _stride2 _stride3] [_shape0 _shape1 _shape2 _shape3]])), :file nil}, :name thi.ng.ndarray.core/make-raw-ndarray4-uint8-clamped, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([data__19986__auto__ o__19987__auto__ p__34491 p__34492]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 6, :line 184, :max-fixed-arity 4, :fn-var true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1 _stride2 _stride3] [_shape0 _shape1 _shape2 _shape3]]))}, make-raw-ndarray2-int8 {:protocol-inline nil, :meta {:export true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1] [_shape0 _shape1]])), :file nil}, :name thi.ng.ndarray.core/make-raw-ndarray2-int8, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([data__19986__auto__ o__19987__auto__ p__33609 p__33610]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 6, :line 165, :max-fixed-arity 4, :fn-var true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1] [_shape0 _shape1]]))}, dimension {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 19, :column 4, :end-line 19, :end-column 13, :protocol thi.ng.ndarray.core/PNDArray, :doc "Returns the ndarray's dimension.", :arglists (quote ([_]))}, :protocol thi.ng.ndarray.core/PNDArray, :name thi.ng.ndarray.core/dimension, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :end-column 13, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc "Returns the ndarray's dimension."}, make-raw-ndarray1-uint8-clamped {:protocol-inline nil, :meta {:export true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0] [_shape0]])), :file nil}, :name thi.ng.ndarray.core/make-raw-ndarray1-uint8-clamped, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([data__19986__auto__ o__19987__auto__ p__33152 p__33153]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 6, :line 151, :max-fixed-arity 4, :fn-var true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0] [_shape0]]))}, NDArray3int32 {:name thi.ng.ndarray.core/NDArray3int32, :type true, :num-fields 8, :record false, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 178, :column 6}, shape {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 21, :column 4, :end-line 21, :end-column 9, :protocol thi.ng.ndarray.core/PNDArray, :doc "Returns a vector of the ndarray's sizes in each dimension.", :arglists (quote ([_]))}, :protocol thi.ng.ndarray.core/PNDArray, :name thi.ng.ndarray.core/shape, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :end-column 9, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc "Returns a vector of the ndarray's sizes in each dimension."}, extract {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 29, :column 4, :end-line 29, :end-column 11, :protocol thi.ng.ndarray.core/PNDArray, :doc "Creates a new backing array of only values in given ndarray view\n    and returns new ndarray of same shape, but with strides reset to\n    defaults order.", :arglists (quote ([_]))}, :protocol thi.ng.ndarray.core/PNDArray, :name thi.ng.ndarray.core/extract, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :end-column 11, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc "Creates a new backing array of only values in given ndarray view\n    and returns new ndarray of same shape, but with strides reset to\n    defaults order."}, ->NDArray1int32 {:protocol-inline nil, :meta {:protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :factory :positional, :arglists (quote ([_data _offset _stride0 _shape0])), :file nil}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :name thi.ng.ndarray.core/->NDArray1int32, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([_data _offset _stride0 _shape0]), :protocol-impl nil, :arglists-meta (nil nil), :column 6, :factory :positional, :line 156, :max-fixed-arity 4, :fn-var true, :arglists (quote ([_data _offset _stride0 _shape0])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}}, make-raw-ndarray4-generic {:protocol-inline nil, :meta {:export true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1 _stride2 _stride3] [_shape0 _shape1 _shape2 _shape3]])), :file nil}, :name thi.ng.ndarray.core/make-raw-ndarray4-generic, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :method-params ([data__19986__auto__ o__19987__auto__ p__34317 p__34318]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 6, :line 182, :max-fixed-arity 4, :fn-var true, :arglists (quote ([data__19986__auto__ o__19987__auto__ [_stride0 _stride1 _stride2 _stride3] [_shape0 _shape1 _shape2 _shape3]]))}, NDArray1int32 {:name thi.ng.ndarray.core/NDArray1int32, :type true, :num-fields 4, :record false, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IReduce}, :protocols #{thi.ng.ndarray.core/PNDArray cljs.core/ISeqable thi.ng.ndarray.core/Object cljs.core/IReduce}, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 156, :column 6}, order {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :line 96, :column 7, :end-line 96, :end-column 12, :arglists (quote ([coll]))}, :name thi.ng.ndarray.core/order, :variadic false, :file "resources/public/js/compiled/out/thi/ng/ndarray/core.cljc", :end-column 12, :method-params ([coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 1, :fn-var true, :arglists (quote ([coll]))}}, :require-macros {mm thi.ng.math.macros, thi.ng.math.macros thi.ng.math.macros, thi.ng.ndarray.macros thi.ng.ndarray.macros}, :cljs.analyzer/constants {:seen #{:int32 :uint8-clamped :int16 :float32 :float64 :ctor :offset :type :data-ctor :uint16 :size :int8 :total :uint32 :generic :shape :stride :uint8 :data}, :order [:generic :ctor :offset :type :size :total :shape :stride :data :data-ctor :uint8 :uint8-clamped :uint16 :uint32 :int8 :int16 :int32 :float32 :float64]}, :doc nil}