;; Analyzed by ClojureScript 0.0-3297
{:name thi.ng.common.error, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires nil, :imports nil, :defs {throw! {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/common/error.cljs", :line 3, :column 7, :end-line 3, :end-column 13, :arglists (quote ([msg]))}, :name thi.ng.common.error/throw!, :variadic false, :file "resources/public/js/compiled/out/thi/ng/common/error.cljs", :end-column 13, :method-params ([msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 3, :end-line 3, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg]))}, key-error! {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/common/error.cljs", :line 9, :column 7, :end-line 9, :end-column 17, :arglists (quote ([k]))}, :name thi.ng.common.error/key-error!, :variadic false, :file "resources/public/js/compiled/out/thi/ng/common/error.cljs", :end-column 17, :method-params ([k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([k]))}, type-error! {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/common/error.cljs", :line 12, :column 7, :end-line 12, :end-column 18, :arglists (quote ([t x]))}, :name thi.ng.common.error/type-error!, :variadic false, :file "resources/public/js/compiled/out/thi/ng/common/error.cljs", :end-column 18, :method-params ([t x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 2, :fn-var true, :arglists (quote ([t x]))}, arity-error! {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/common/error.cljs", :line 15, :column 7, :end-line 15, :end-column 19, :arglists (quote ([n]))}, :name thi.ng.common.error/arity-error!, :variadic false, :file "resources/public/js/compiled/out/thi/ng/common/error.cljs", :end-column 19, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, illegal-arg! {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/common/error.cljs", :line 18, :column 7, :end-line 18, :end-column 19, :arglists (quote ([x] [msg x])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [msg x]), :arglists ([x] [msg x]), :arglists-meta (nil nil)}}, :name thi.ng.common.error/illegal-arg!, :variadic false, :file "resources/public/js/compiled/out/thi/ng/common/error.cljs", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [msg x]), :arglists ([x] [msg x]), :arglists-meta (nil nil)}, :method-params ([x] [msg x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 2, :fn-var true, :arglists ([x] [msg x])}, unsupported! {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/thi/ng/common/error.cljs", :line 22, :column 7, :end-line 22, :end-column 19, :arglists (quote ([] [msg])), :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [msg]), :arglists ([] [msg]), :arglists-meta (nil nil)}}, :name thi.ng.common.error/unsupported!, :variadic false, :file "resources/public/js/compiled/out/thi/ng/common/error.cljs", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [msg]), :arglists ([] [msg]), :arglists-meta (nil nil)}, :method-params ([] [msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists ([] [msg])}}}