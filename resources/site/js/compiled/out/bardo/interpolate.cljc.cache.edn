;; Analyzed by ClojureScript 0.0-3297
{:use-macros {match cljs.core.match}, :excludes #{}, :name bardo.interpolate, :imports nil, :requires {cljs.core.match cljs.core.match, clojure.set clojure.set, ease bardo.ease, bardo.ease bardo.ease}, :uses {union clojure.set}, :defs {wrap-nil {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/bardo/interpolate.cljc", :line 60, :column 7, :end-line 60, :end-column 15, :arglists (quote ([start end])), :doc "if a value is nil, replace it with a fresh value of the other\n  value if it satisfies IFresh"}, :name bardo.interpolate/wrap-nil, :variadic false, :file "resources/public/js/compiled/out/bardo/interpolate.cljc", :end-column 15, :method-params ([start end]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 2, :fn-var true, :arglists (quote ([start end])), :doc "if a value is nil, replace it with a fresh value of the other\n  value if it satisfies IFresh"}, blend {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/bardo/interpolate.cljc", :line 221, :column 7, :end-line 221, :end-column 12, :arglists (quote ([intrpl end]))}, :name bardo.interpolate/blend, :variadic false, :file "resources/public/js/compiled/out/bardo/interpolate.cljc", :end-column 12, :method-params ([intrpl end]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 221, :end-line 221, :max-fixed-arity 2, :fn-var true, :arglists (quote ([intrpl end]))}, mix {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/bardo/interpolate.cljc", :line 216, :column 7, :end-line 216, :end-column 10, :arglists (quote ([start end]))}, :name bardo.interpolate/mix, :variadic false, :file "resources/public/js/compiled/out/bardo/interpolate.cljc", :end-column 10, :method-params ([start end]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 216, :end-line 216, :max-fixed-arity 2, :fn-var true, :arglists (quote ([start end]))}, fresh {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/bardo/interpolate.cljc", :line 11, :column 4, :end-line 11, :end-column 9, :protocol bardo.interpolate/IFresh, :doc nil, :arglists (quote ([x]))}, :protocol bardo.interpolate/IFresh, :name bardo.interpolate/fresh, :variadic false, :file "resources/public/js/compiled/out/bardo/interpolate.cljc", :end-column 9, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc nil}, into-lazy-seq {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/bardo/interpolate.cljc", :line 211, :column 7, :end-line 211, :end-column 20, :arglists (quote ([intrpl vals]))}, :name bardo.interpolate/into-lazy-seq, :variadic false, :file "resources/public/js/compiled/out/bardo/interpolate.cljc", :end-column 20, :method-params ([intrpl vals]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 211, :end-line 211, :max-fixed-arity 2, :fn-var true, :arglists (quote ([intrpl vals]))}, wrap-size {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/bardo/interpolate.cljc", :line 119, :column 7, :end-line 119, :end-column 16, :arglists (quote ([start end])), :doc "removed keys not present in start or end of interpolation"}, :name bardo.interpolate/wrap-size, :variadic false, :file "resources/public/js/compiled/out/bardo/interpolate.cljc", :end-column 16, :method-params ([start end]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 119, :end-line 119, :max-fixed-arity 2, :fn-var true, :arglists (quote ([start end])), :doc "removed keys not present in start or end of interpolation"}, IInterpolate {:meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/bardo/interpolate.cljc", :line 135, :column 14, :end-line 135, :end-column 26, :doc nil, :protocol-symbol true, :protocol-info {:methods {-interpolate [[start end]]}}}, :protocol-symbol true, :name bardo.interpolate/IInterpolate, :file "resources/public/js/compiled/out/bardo/interpolate.cljc", :end-column 26, :column 1, :line 135, :protocol-info {:methods {-interpolate [[start end]]}}, :info nil, :end-line 135, :impls #{cljs.core/PersistentArrayMap number cljs.core/List}, :doc nil}, symmetrical-error {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/bardo/interpolate.cljc", :line 93, :column 7, :end-line 93, :end-column 24, :arglists (quote ([s msg f])), :doc "calls (f x y) (f y x) and returns [x y] where f is a function (f x y) that returns [x y]"}, :name bardo.interpolate/symmetrical-error, :variadic false, :file "resources/public/js/compiled/out/bardo/interpolate.cljc", :end-column 24, :method-params ([s msg f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 93, :end-line 93, :max-fixed-arity 3, :fn-var true, :arglists (quote ([s msg f])), :doc "calls (f x y) (f y x) and returns [x y] where f is a function (f x y) that returns [x y]"}, wrap-errors {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/bardo/interpolate.cljc", :line 107, :column 7, :end-line 107, :end-column 18, :arglists (quote ([x y])), :doc "throw appropriate errors if you can't interpolate between two values"}, :name bardo.interpolate/wrap-errors, :variadic false, :file "resources/public/js/compiled/out/bardo/interpolate.cljc", :end-column 18, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 107, :end-line 107, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y])), :doc "throw appropriate errors if you can't interpolate between two values"}, pipeline {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/bardo/interpolate.cljc", :line 238, :column 7, :end-line 238, :end-column 15, :arglists (quote ([states] [states input])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([states] [states input]), :arglists ([states] [states input]), :arglists-meta (nil nil)}}, :name bardo.interpolate/pipeline, :variadic false, :file "resources/public/js/compiled/out/bardo/interpolate.cljc", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([states] [states input]), :arglists ([states] [states input]), :arglists-meta (nil nil)}, :method-params ([states] [states input]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 238, :end-line 238, :max-fixed-arity 2, :fn-var true, :arglists ([states] [states input])}, wrap-infinite {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/bardo/interpolate.cljc", :line 74, :column 7, :end-line 74, :end-column 20, :arglists (quote ([x y]))}, :name bardo.interpolate/wrap-infinite, :variadic false, :file "resources/public/js/compiled/out/bardo/interpolate.cljc", :end-column 20, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y]))}, hash-map? {:name bardo.interpolate/hash-map?, :file "resources/public/js/compiled/out/bardo/interpolate.cljc", :line 58, :column 1, :end-line 58, :end-column 15, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/bardo/interpolate.cljc", :line 58, :column 6, :end-line 58, :end-column 15}}, juxt-args {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/bardo/interpolate.cljc", :line 87, :column 7, :end-line 87, :end-column 16, :arglists (quote ([& fns])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(fns)], :arglists ([& fns]), :arglists-meta (nil)}}, :name bardo.interpolate/juxt-args, :variadic true, :file "resources/public/js/compiled/out/bardo/interpolate.cljc", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(fns)], :arglists ([& fns]), :arglists-meta (nil)}, :method-params [(fns)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 87, :end-line 87, :max-fixed-arity 0, :fn-var true, :arglists ([& fns])}, interpolate {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/bardo/interpolate.cljc", :line 197, :column 7, :end-line 197, :end-column 18, :arglists (quote ([start end]))}, :name bardo.interpolate/interpolate, :variadic false, :file "resources/public/js/compiled/out/bardo/interpolate.cljc", :end-column 18, :method-params ([start end]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 197, :end-line 197, :max-fixed-arity 2, :fn-var true, :arglists (quote ([start end]))}, pair-pred {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/bardo/interpolate.cljc", :line 103, :column 7, :end-line 103, :end-column 16, :arglists (quote ([pred]))}, :name bardo.interpolate/pair-pred, :variadic false, :file "resources/public/js/compiled/out/bardo/interpolate.cljc", :end-column 16, :method-params ([pred]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 103, :end-line 103, :max-fixed-arity 1, :fn-var true, :arglists (quote ([pred]))}, chain {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/bardo/interpolate.cljc", :line 226, :column 7, :end-line 226, :end-column 12, :arglists (quote ([intrpl end] [intrpl end mid])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([intrpl end] [intrpl end mid]), :arglists ([intrpl end] [intrpl end mid]), :arglists-meta (nil nil)}}, :name bardo.interpolate/chain, :variadic false, :file "resources/public/js/compiled/out/bardo/interpolate.cljc", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([intrpl end] [intrpl end mid]), :arglists ([intrpl end] [intrpl end mid]), :arglists-meta (nil nil)}, :method-params ([intrpl end] [intrpl end mid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 226, :end-line 226, :max-fixed-arity 3, :fn-var true, :arglists ([intrpl end] [intrpl end mid])}, IFresh {:meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/bardo/interpolate.cljc", :line 10, :column 14, :end-line 10, :end-column 20, :doc nil, :protocol-symbol true, :protocol-info {:methods {fresh [[x]]}}}, :protocol-symbol true, :name bardo.interpolate/IFresh, :file "resources/public/js/compiled/out/bardo/interpolate.cljc", :end-column 20, :column 1, :line 10, :protocol-info {:methods {fresh [[x]]}}, :info nil, :end-line 10, :impls #{cljs.core/PersistentArrayMap number cljs.core/List}, :doc nil}, -interpolate {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/bardo/interpolate.cljc", :line 136, :column 4, :end-line 136, :end-column 16, :protocol bardo.interpolate/IInterpolate, :doc nil, :arglists (quote ([start end]))}, :protocol bardo.interpolate/IInterpolate, :name bardo.interpolate/-interpolate, :variadic false, :file "resources/public/js/compiled/out/bardo/interpolate.cljc", :end-column 16, :method-params ([start end]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 135, :end-line 136, :max-fixed-arity 2, :fn-var true, :arglists (quote ([start end])), :doc nil}}, :require-macros {cljs.core.match cljs.core.match}, :cljs.analyzer/constants {:seen #{:else}, :order [:else]}, :doc nil}