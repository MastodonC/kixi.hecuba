;; Analyzed by ClojureScript 0.0-3297
{:use-macros nil, :excludes #{}, :name bardo.ease, :imports nil, :requires {str clojure.string, clojure.string clojure.string}, :uses nil, :defs {clamp {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/bardo/ease.cljc", :line 15, :column 7, :end-line 15, :end-column 12, :arglists (quote ([f])), :doc "clamp input to function so that (<= 0 t 1)"}, :name bardo.ease/clamp, :variadic false, :file "resources/public/js/compiled/out/bardo/ease.cljc", :end-column 12, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f])), :doc "clamp input to function so that (<= 0 t 1)"}, reflect {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/bardo/ease.cljc", :line 69, :column 7, :end-line 69, :end-column 14, :arglists (quote ([f])), :doc "symmetrical around t = 0.5"}, :name bardo.ease/reflect, :variadic false, :file "resources/public/js/compiled/out/bardo/ease.cljc", :end-column 14, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f])), :doc "symmetrical around t = 0.5"}, shift {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/bardo/ease.cljc", :line 24, :column 7, :end-line 24, :end-column 12, :arglists (quote ([f cmin cmax] [f cmin cmax nmin nmax])), :doc "shifts the domain of input from [cmin cmax] to [nmin nmax]", :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([f cmin cmax] [f cmin cmax nmin nmax]), :arglists ([f cmin cmax] [f cmin cmax nmin nmax]), :arglists-meta (nil nil)}}, :name bardo.ease/shift, :variadic false, :file "resources/public/js/compiled/out/bardo/ease.cljc", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([f cmin cmax] [f cmin cmax nmin nmax]), :arglists ([f cmin cmax] [f cmin cmax nmin nmax]), :arglists-meta (nil nil)}, :method-params ([f cmin cmax] [f cmin cmax nmin nmax]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 5, :fn-var true, :arglists ([f cmin cmax] [f cmin cmax nmin nmax]), :doc "shifts the domain of input from [cmin cmax] to [nmin nmax]"}, shift-parts {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/bardo/ease.cljc", :line 44, :column 7, :end-line 44, :end-column 18, :arglists (quote ([f input output])), :doc "shift input t over many steps\n   ex. (shift-part f [0 0.5 1] [0 0.3 1]) expands to roughly\n   =>  (fn [t]\n         (cond\n           (<= 0 t 0.5) (shift f 0 0.5 0 0.3)\n           (<= 0.5 t 1) (shift f 0.5 1 0.3 1)))"}, :name bardo.ease/shift-parts, :variadic false, :file "resources/public/js/compiled/out/bardo/ease.cljc", :end-column 18, :method-params ([f input output]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 3, :fn-var true, :arglists (quote ([f input output])), :doc "shift input t over many steps\n   ex. (shift-part f [0 0.5 1] [0 0.3 1]) expands to roughly\n   =>  (fn [t]\n         (cond\n           (<= 0 t 0.5) (shift f 0 0.5 0 0.3)\n           (<= 0.5 t 1) (shift f 0.5 1 0.3 1)))"}, wrap {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/bardo/ease.cljc", :line 10, :column 7, :end-line 10, :end-column 11, :arglists (quote ([f ease])), :doc "useful for wrapping easers in other easers, especially in theading macros"}, :name bardo.ease/wrap, :variadic false, :file "resources/public/js/compiled/out/bardo/ease.cljc", :end-column 11, :method-params ([f ease]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f ease])), :doc "useful for wrapping easers in other easers, especially in theading macros"}, poly {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/bardo/ease.cljc", :line 101, :column 7, :end-line 101, :end-column 11, :arglists (quote ([e])), :doc "raise t to power e"}, :name bardo.ease/poly, :variadic false, :file "resources/public/js/compiled/out/bardo/ease.cljc", :end-column 11, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 101, :end-line 101, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e])), :doc "raise t to power e"}, partition-range {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/bardo/ease.cljc", :line 35, :column 7, :end-line 35, :end-column 22, :arglists (quote ([coll])), :doc "for a range partition into pairs of each number and it's following\n   ex. [0 0.25 0.5 0.75 1] => [[0 0.25] [0.25 0.5] [0.5 0.75] [0.75 1]]"}, :name bardo.ease/partition-range, :variadic false, :file "resources/public/js/compiled/out/bardo/ease.cljc", :end-column 22, :method-params ([coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 1, :fn-var true, :arglists (quote ([coll])), :doc "for a range partition into pairs of each number and it's following\n   ex. [0 0.25 0.5 0.75 1] => [[0 0.25] [0.25 0.5] [0.5 0.75] [0.75 1]]"}, flip {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/bardo/ease.cljc", :line 63, :column 7, :end-line 63, :end-column 11, :arglists (quote ([f])), :doc "reverse"}, :name bardo.ease/flip, :variadic false, :file "resources/public/js/compiled/out/bardo/ease.cljc", :end-column 11, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f])), :doc "reverse"}, PI {:name bardo.ease/PI, :file "resources/public/js/compiled/out/bardo/ease.cljc", :line 85, :column 1, :end-line 85, :end-column 8, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/bardo/ease.cljc", :line 85, :column 6, :end-line 85, :end-column 8}}, exp {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/bardo/ease.cljc", :line 117, :column 7, :end-line 117, :end-column 10, :arglists (quote ([t])), :doc "Modeled after the exponential function y = 2^(10(x - 1))"}, :name bardo.ease/exp, :variadic false, :file "resources/public/js/compiled/out/bardo/ease.cljc", :end-column 10, :method-params ([t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 117, :end-line 117, :max-fixed-arity 1, :fn-var true, :arglists (quote ([t])), :doc "Modeled after the exponential function y = 2^(10(x - 1))"}, circle {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/bardo/ease.cljc", :line 112, :column 7, :end-line 112, :end-column 13, :arglists (quote ([t])), :doc "Modeled after shifted quadrant IV of unit circle"}, :name bardo.ease/circle, :variadic false, :file "resources/public/js/compiled/out/bardo/ease.cljc", :end-column 13, :method-params ([t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 112, :end-line 112, :max-fixed-arity 1, :fn-var true, :arglists (quote ([t])), :doc "Modeled after shifted quadrant IV of unit circle"}, cubic {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/bardo/ease.cljc", :line 95, :column 7, :end-line 95, :end-column 12, :arglists (quote ([t])), :doc "Modeled after the cubic y = x^3"}, :name bardo.ease/cubic, :variadic false, :file "resources/public/js/compiled/out/bardo/ease.cljc", :end-column 12, :method-params ([t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 95, :end-line 95, :max-fixed-arity 1, :fn-var true, :arglists (quote ([t])), :doc "Modeled after the cubic y = x^3"}, modes {:name bardo.ease/modes, :file "resources/public/js/compiled/out/bardo/ease.cljc", :line 77, :column 1, :end-line 77, :end-column 11, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/bardo/ease.cljc", :line 77, :column 6, :end-line 77, :end-column 11}}, elastic {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/bardo/ease.cljc", :line 124, :column 7, :end-line 124, :end-column 14, :arglists (quote ([t])), :doc "Modeled after the damped sine wave y = sin(13PI_2*x)*pow(2, 10 * (x - 1))"}, :name bardo.ease/elastic, :variadic false, :file "resources/public/js/compiled/out/bardo/ease.cljc", :end-column 14, :method-params ([t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 124, :end-line 124, :max-fixed-arity 1, :fn-var true, :arglists (quote ([t])), :doc "Modeled after the damped sine wave y = sin(13PI_2*x)*pow(2, 10 * (x - 1))"}, bounce {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/bardo/ease.cljc", :line 136, :column 7, :end-line 136, :end-column 13, :arglists (quote ([t])), :doc "Modeled after some fun bouncing stuff"}, :name bardo.ease/bounce, :variadic false, :file "resources/public/js/compiled/out/bardo/ease.cljc", :end-column 13, :method-params ([t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 136, :end-line 136, :max-fixed-arity 1, :fn-var true, :arglists (quote ([t])), :doc "Modeled after some fun bouncing stuff"}, ease {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/bardo/ease.cljc", :line 165, :column 7, :end-line 165, :end-column 11, :arglists (quote ([key & args])), :doc "easing function constructor. takes key-mode where mode #{:in :out :in-out}\n  ex. :bounce-in-out will return a symetrical bounce easing curve", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(key args)], :arglists ([key & args]), :arglists-meta (nil)}}, :name bardo.ease/ease, :variadic true, :file "resources/public/js/compiled/out/bardo/ease.cljc", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(key args)], :arglists ([key & args]), :arglists-meta (nil)}, :method-params [(key args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 165, :end-line 165, :max-fixed-arity 1, :fn-var true, :arglists ([key & args]), :doc "easing function constructor. takes key-mode where mode #{:in :out :in-out}\n  ex. :bounce-in-out will return a symetrical bounce easing curve"}, ease-fns {:name bardo.ease/ease-fns, :file "resources/public/js/compiled/out/bardo/ease.cljc", :line 154, :column 1, :end-line 154, :end-column 14, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/bardo/ease.cljc", :line 154, :column 6, :end-line 154, :end-column 14}}, interpolator {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/bardo/ease.cljc", :line 4, :column 7, :end-line 4, :end-column 19, :arglists (quote ([f])), :doc "canonical definition of a higher order interpolator function"}, :name bardo.ease/interpolator, :variadic false, :file "resources/public/js/compiled/out/bardo/ease.cljc", :end-column 19, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f])), :doc "canonical definition of a higher order interpolator function"}, back {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/bardo/ease.cljc", :line 130, :column 7, :end-line 130, :end-column 11, :arglists (quote ([t])), :doc "Modeled after the overshooting cubic y = x^3-x*sin(x*pi)"}, :name bardo.ease/back, :variadic false, :file "resources/public/js/compiled/out/bardo/ease.cljc", :end-column 11, :method-params ([t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 130, :end-line 130, :max-fixed-arity 1, :fn-var true, :arglists (quote ([t])), :doc "Modeled after the overshooting cubic y = x^3-x*sin(x*pi)"}, quad {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/bardo/ease.cljc", :line 90, :column 7, :end-line 90, :end-column 11, :arglists (quote ([t])), :doc "Modeled after the parabola y = x^2"}, :name bardo.ease/quad, :variadic false, :file "resources/public/js/compiled/out/bardo/ease.cljc", :end-column 11, :method-params ([t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 90, :end-line 90, :max-fixed-arity 1, :fn-var true, :arglists (quote ([t])), :doc "Modeled after the parabola y = x^2"}, PI_2 {:name bardo.ease/PI_2, :file "resources/public/js/compiled/out/bardo/ease.cljc", :line 87, :column 1, :end-line 87, :end-column 10, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/bardo/ease.cljc", :line 87, :column 6, :end-line 87, :end-column 10}}, sine {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/resources/public/js/compiled/out/bardo/ease.cljc", :line 107, :column 7, :end-line 107, :end-column 11, :arglists (quote ([t])), :doc "Modeled after quarter-cycle of sine wave"}, :name bardo.ease/sine, :variadic false, :file "resources/public/js/compiled/out/bardo/ease.cljc", :end-column 11, :method-params ([t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 107, :end-line 107, :max-fixed-arity 1, :fn-var true, :arglists (quote ([t])), :doc "Modeled after quarter-cycle of sine wave"}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:poly :else :cubic :exp :circle :elastic :bounce :out :back :quad :in-out :sine :out-in :linear :in}, :order [:else :in :out :in-out :out-in :poly :cubic :exp :circle :elastic :bounce :back :quad :sine :linear]}, :doc nil}