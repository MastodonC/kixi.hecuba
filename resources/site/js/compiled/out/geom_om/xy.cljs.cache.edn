;; Analyzed by ClojureScript 0.0-3297
{:use-macros {go cljs.core.async.macros}, :excludes #{}, :name geom-om.xy, :imports nil, :requires {thi.ng.geom.core.utils thi.ng.geom.core.utils, thi.ng.geom.viz.core thi.ng.geom.viz.core, gstring goog.string, viz thi.ng.geom.viz.core, grad thi.ng.color.gradients, dom om.dom, hiccups.runtime hiccups.runtime, thi.ng.geom.core thi.ng.geom.core, goog.string goog.string, gu thi.ng.geom.core.utils, v thi.ng.geom.core.vector, cljs-http.client cljs-http.client, om.dom om.dom, thi.ng.math.simplexnoise thi.ng.math.simplexnoise, thi.ng.geom.svg.core thi.ng.geom.svg.core, thi.ng.geom.core.vector thi.ng.geom.core.vector, thi.ng.math.core thi.ng.math.core, cljs.core.async cljs.core.async, thi.ng.color.gradients thi.ng.color.gradients, n thi.ng.math.simplexnoise, m thi.ng.math.core, goog.string.format goog.string.format, om.core om.core, om om.core, g thi.ng.geom.core, cljs.reader cljs.reader, svg thi.ng.geom.svg.core, hiccupsrt hiccups.runtime, http cljs-http.client}, :uses {<! cljs.core.async, close! cljs.core.async, chan cljs.core.async, PI thi.ng.math.core, sliding-buffer cljs.core.async, >! cljs.core.async, read-string cljs.reader, alts! cljs.core.async, put! cljs.core.async}, :defs {chart-data-chan {:name geom-om.xy/chart-data-chan, :file "src/geom_om/xy.cljs", :line 25, :column 1, :end-line 25, :end-column 21, :meta {:file "/Users/jasonbell/work/git/geom-om/src/geom_om/xy.cljs", :line 25, :column 6, :end-line 25, :end-column 21}}, t30740 {:num-fields 11, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta cljs.core/IWithMeta}, :name geom-om.xy/t30740, :file "src/geom_om/xy.cljs", :type true, :anonymous true, :column 5, :line 75, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, set-new-xy-plot-data! {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/src/geom_om/xy.cljs", :line 27, :column 7, :end-line 27, :end-column 28, :arglists (quote ([cursor data]))}, :name geom-om.xy/set-new-xy-plot-data!, :variadic false, :file "src/geom_om/xy.cljs", :end-column 28, :method-params ([cursor data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cursor data]))}, chart-width {:name geom-om.xy/chart-width, :file "src/geom_om/xy.cljs", :line 21, :column 1, :end-line 21, :end-column 17, :meta {:file "/Users/jasonbell/work/git/geom-om/src/geom_om/xy.cljs", :line 21, :column 6, :end-line 21, :end-column 17}}, chart-y-range {:name geom-om.xy/chart-y-range, :file "src/geom_om/xy.cljs", :line 24, :column 1, :end-line 24, :end-column 19, :meta {:file "/Users/jasonbell/work/git/geom-om/src/geom_om/xy.cljs", :line 24, :column 6, :end-line 24, :end-column 19}}, t30736 {:num-fields 11, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta cljs.core/IWithMeta}, :name geom-om.xy/t30736, :file "src/geom_om/xy.cljs", :type true, :anonymous true, :column 5, :line 75, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, chart-height {:name geom-om.xy/chart-height, :file "src/geom_om/xy.cljs", :line 22, :column 1, :end-line 22, :end-column 18, :meta {:file "/Users/jasonbell/work/git/geom-om/src/geom_om/xy.cljs", :line 22, :column 6, :end-line 22, :end-column 18}}, ->t30740 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([owner x-range height p__30734 y-range width cursor map__30739 data-chan chart meta30741])), :file nil}, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta cljs.core/IWithMeta}, :name geom-om.xy/->t30740, :variadic false, :file "src/geom_om/xy.cljs", :method-params ([owner x-range height p__30734 y-range width cursor map__30739 data-chan chart meta30741]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 75, :max-fixed-arity 11, :fn-var true, :arglists (quote ([owner x-range height p__30734 y-range width cursor map__30739 data-chan chart meta30741])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, chart-x-range {:name geom-om.xy/chart-x-range, :file "src/geom_om/xy.cljs", :line 23, :column 1, :end-line 23, :end-column 19, :meta {:file "/Users/jasonbell/work/git/geom-om/src/geom_om/xy.cljs", :line 23, :column 6, :end-line 23, :end-column 19}}, chart {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/src/geom_om/xy.cljs", :line 60, :column 7, :end-line 60, :end-column 12, :arglists (quote ([{:keys [width height x-range y-range data-chan], :or {width 800, height 600, x-range [0 200], y-range [0 200]}}]))}, :name geom-om.xy/chart, :variadic false, :file "src/geom_om/xy.cljs", :end-column 12, :method-params ([p__30734]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [width height x-range y-range data-chan], :or {width 800, height 600, x-range [0 200], y-range [0 200]}}]))}, ->t30736 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([owner x-range height map__30735 p__30734 y-range width cursor data-chan chart meta30737])), :file nil}, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta cljs.core/IWithMeta}, :name geom-om.xy/->t30736, :variadic false, :file "src/geom_om/xy.cljs", :method-params ([owner x-range height map__30735 p__30734 y-range width cursor data-chan chart meta30737]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 75, :max-fixed-arity 11, :fn-var true, :arglists (quote ([owner x-range height map__30735 p__30734 y-range width cursor data-chan chart meta30737])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, data-loop {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/src/geom_om/xy.cljs", :line 55, :column 8, :end-line 55, :end-column 17, :private true, :arglists (quote ([cursor input-chan]))}, :private true, :name geom-om.xy/data-loop, :variadic false, :file "src/geom_om/xy.cljs", :end-column 17, :method-params ([cursor input-chan]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cursor input-chan]))}}, :require-macros {hiccups hiccups.core, hiccups.core hiccups.core, cljs.core.async.macros cljs.core.async.macros, om om.core, om.core om.core, dom om.dom, om.dom om.dom}, :cljs.analyzer/constants {:seen #{:text-anchor :stroke :element :y-axis :else :layout :grid :fill :y-range :width :pos :recur :data-chan :minor-y :major :label-dist :line :attribs :label :values :minor-x :shape :minor :domain :x-axis :x-range :range :height :data}, :order [:element :x-axis :y-axis :grid :data :domain :range :pos :major :minor :label-dist :label :text-anchor :attribs :minor-x :minor-y :stroke :values :shape :layout :fill :line :recur :else :width :height :x-range :y-range :data-chan]}, :doc nil}