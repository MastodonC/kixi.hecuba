;; Analyzed by ClojureScript 0.0-3297
{:use-macros {go cljs.core.async.macros}, :excludes #{}, :name geom-om.heatmap, :imports nil, :requires {thi.ng.geom.core.utils thi.ng.geom.core.utils, thi.ng.geom.viz.core thi.ng.geom.viz.core, gstring goog.string, viz thi.ng.geom.viz.core, grad thi.ng.color.gradients, dom om.dom, hiccups.runtime hiccups.runtime, thi.ng.geom.core thi.ng.geom.core, goog.string goog.string, gu thi.ng.geom.core.utils, v thi.ng.geom.core.vector, cljs-http.client cljs-http.client, om.dom om.dom, thi.ng.math.simplexnoise thi.ng.math.simplexnoise, thi.ng.geom.svg.core thi.ng.geom.svg.core, thi.ng.geom.core.vector thi.ng.geom.core.vector, bardo.interpolate bardo.interpolate, thi.ng.math.core thi.ng.math.core, cljs.core.async cljs.core.async, thi.ng.color.gradients thi.ng.color.gradients, n thi.ng.math.simplexnoise, m thi.ng.math.core, goog.string.format goog.string.format, om.core om.core, om om.core, g thi.ng.geom.core, cljs.reader cljs.reader, svg thi.ng.geom.svg.core, hiccupsrt hiccups.runtime, http cljs-http.client}, :uses {<! cljs.core.async, close! cljs.core.async, chan cljs.core.async, pipeline bardo.interpolate, PI thi.ng.math.core, sliding-buffer cljs.core.async, >! cljs.core.async, read-string cljs.reader, alts! cljs.core.async, put! cljs.core.async}, :defs {chart-data-chan {:name geom-om.heatmap/chart-data-chan, :file "src/geom_om/heatmap.cljs", :line 27, :column 1, :end-line 27, :end-column 21, :meta {:file "/Users/jasonbell/work/git/geom-om/src/geom_om/heatmap.cljs", :line 27, :column 6, :end-line 27, :end-column 21}}, chart-fill-oor-cells? {:name geom-om.heatmap/chart-fill-oor-cells?, :file "src/geom_om/heatmap.cljs", :line 28, :column 1, :end-line 28, :end-column 27, :meta {:file "/Users/jasonbell/work/git/geom-om/src/geom_om/heatmap.cljs", :line 28, :column 6, :end-line 28, :end-column 27}}, int-to-dow {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/src/geom_om/heatmap.cljs", :line 52, :column 7, :end-line 52, :end-column 17, :arglists (quote ([num]))}, :name geom-om.heatmap/int-to-dow, :variadic false, :file "src/geom_om/heatmap.cljs", :end-column 17, :method-params ([num]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 1, :fn-var true, :arglists (quote ([num]))}, generate-palette {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/src/geom_om/heatmap.cljs", :line 35, :column 7, :end-line 35, :end-column 23, :arglists (quote ([grads colours])), :doc "Generates n colours based on the gradations and color range specified - EXPENSIVE"}, :name geom-om.heatmap/generate-palette, :variadic false, :file "src/geom_om/heatmap.cljs", :end-column 23, :method-params ([grads colours]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 2, :fn-var true, :arglists (quote ([grads colours])), :doc "Generates n colours based on the gradations and color range specified - EXPENSIVE"}, ->t30675 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([chart p__30669 map__30674 width height data-chan fill-out-of-range-cells? cursor owner meta30676])), :file nil}, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta cljs.core/IWithMeta}, :name geom-om.heatmap/->t30675, :variadic false, :file "src/geom_om/heatmap.cljs", :method-params ([chart p__30669 map__30674 width height data-chan fill-out-of-range-cells? cursor owner meta30676]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 137, :max-fixed-arity 10, :fn-var true, :arglists (quote ([chart p__30669 map__30674 width height data-chan fill-out-of-range-cells? cursor owner meta30676])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, colour-scheme {:name geom-om.heatmap/colour-scheme, :file "src/geom_om/heatmap.cljs", :line 31, :column 1, :end-line 31, :end-column 19, :meta {:file "/Users/jasonbell/work/git/geom-om/src/geom_om/heatmap.cljs", :line 31, :column 6, :end-line 31, :end-column 19}, :doc "http://colorbrewer2.org/?type=diverging&scheme=RdYlBu&n=10"}, chart-width {:name geom-om.heatmap/chart-width, :file "src/geom_om/heatmap.cljs", :line 25, :column 1, :end-line 25, :end-column 17, :meta {:file "/Users/jasonbell/work/git/geom-om/src/geom_om/heatmap.cljs", :line 25, :column 6, :end-line 25, :end-column 17}}, x-readings {:name geom-om.heatmap/x-readings, :file "src/geom_om/heatmap.cljs", :line 22, :column 1, :end-line 22, :end-column 16, :meta {:file "/Users/jasonbell/work/git/geom-om/src/geom_om/heatmap.cljs", :line 22, :column 6, :end-line 22, :end-column 16}}, chart-height {:name geom-om.heatmap/chart-height, :file "src/geom_om/heatmap.cljs", :line 26, :column 1, :end-line 26, :end-column 18, :meta {:file "/Users/jasonbell/work/git/geom-om/src/geom_om/heatmap.cljs", :line 26, :column 6, :end-line 26, :end-column 18}}, heatmap-spec {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/src/geom_om/heatmap.cljs", :line 42, :column 7, :end-line 42, :end-column 19, :arglists (quote ([id heatmap-data size-x size-y lcb ucb grads]))}, :name geom-om.heatmap/heatmap-spec, :variadic false, :file "src/geom_om/heatmap.cljs", :end-column 19, :method-params ([id heatmap-data size-x size-y lcb ucb grads]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 7, :fn-var true, :arglists (quote ([id heatmap-data size-x size-y lcb ucb grads]))}, ->t30671 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([chart p__30669 map__30670 width height data-chan fill-out-of-range-cells? cursor owner meta30672])), :file nil}, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta cljs.core/IWithMeta}, :name geom-om.heatmap/->t30671, :variadic false, :file "src/geom_om/heatmap.cljs", :method-params ([chart p__30669 map__30670 width height data-chan fill-out-of-range-cells? cursor owner meta30672]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 137, :max-fixed-arity 10, :fn-var true, :arglists (quote ([chart p__30669 map__30670 width height data-chan fill-out-of-range-cells? cursor owner meta30672])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t30671 {:num-fields 10, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta cljs.core/IWithMeta}, :name geom-om.heatmap/t30671, :file "src/geom_om/heatmap.cljs", :type true, :anonymous true, :column 5, :line 137, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, chart {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/src/geom_om/heatmap.cljs", :line 125, :column 7, :end-line 125, :end-column 12, :arglists (quote ([{:keys [width height data-chan fill-out-of-range-cells?], :or {width 800, height 600}}]))}, :name geom-om.heatmap/chart, :variadic false, :file "src/geom_om/heatmap.cljs", :end-column 12, :method-params ([p__30669]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 125, :end-line 125, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [width height data-chan fill-out-of-range-cells?], :or {width 800, height 600}}]))}, set-new-heatmap-data! {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/src/geom_om/heatmap.cljs", :line 62, :column 7, :end-line 62, :end-column 28, :arglists (quote ([cursor data lcb ucb gradations]))}, :name geom-om.heatmap/set-new-heatmap-data!, :variadic false, :file "src/geom_om/heatmap.cljs", :end-column 28, :method-params ([cursor data lcb ucb gradations]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 5, :fn-var true, :arglists (quote ([cursor data lcb ucb gradations]))}, y-readings {:name geom-om.heatmap/y-readings, :file "src/geom_om/heatmap.cljs", :line 23, :column 1, :end-line 23, :end-column 16, :meta {:file "/Users/jasonbell/work/git/geom-om/src/geom_om/heatmap.cljs", :line 23, :column 6, :end-line 23, :end-column 16}}, t30675 {:num-fields 10, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta cljs.core/IWithMeta}, :name geom-om.heatmap/t30675, :file "src/geom_om/heatmap.cljs", :type true, :anonymous true, :column 5, :line 137, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, default-gradations {:name geom-om.heatmap/default-gradations, :file "src/geom_om/heatmap.cljs", :line 29, :column 1, :end-line 29, :end-column 24, :meta {:file "/Users/jasonbell/work/git/geom-om/src/geom_om/heatmap.cljs", :line 29, :column 6, :end-line 29, :end-column 24}}, int-to-tod {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/src/geom_om/heatmap.cljs", :line 56, :column 7, :end-line 56, :end-column 17, :arglists (quote ([num]))}, :name geom-om.heatmap/int-to-tod, :variadic false, :file "src/geom_om/heatmap.cljs", :end-column 17, :method-params ([num]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 1, :fn-var true, :arglists (quote ([num]))}, data-loop {:protocol-inline nil, :meta {:file "/Users/jasonbell/work/git/geom-om/src/geom_om/heatmap.cljs", :line 120, :column 8, :end-line 120, :end-column 17, :private true, :arglists (quote ([cursor input-chan]))}, :private true, :name geom-om.heatmap/data-loop, :variadic false, :file "src/geom_om/heatmap.cljs", :end-column 17, :method-params ([cursor input-chan]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 120, :end-line 120, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cursor input-chan]))}}, :require-macros {hiccups hiccups.core, hiccups.core hiccups.core, cljs.core.async.macros cljs.core.async.macros, om om.core, om.core om.core, dom om.dom, om.dom om.dom}, :cljs.analyzer/constants {:seen #{:text-anchor :format :palette-scale :value-domain :element :y-axis :else :layout :major-size :palette :green :width :pos :recur :data-chan :element-legend :matrix :major :label-dist :label :red :blue :yellow-magenta-cyan :ucb :domain :grads :visible :x-axis :fill-out-of-range-cells? :range :height :lcb :data}, :order [:red :green :blue :matrix :value-domain :palette :palette-scale :layout :data :element :x-axis :y-axis :domain :range :major :pos :label-dist :major-size :format :label :text-anchor :yellow-magenta-cyan :element-legend :visible :recur :lcb :ucb :grads :else :width :height :data-chan :fill-out-of-range-cells?]}, :doc nil}